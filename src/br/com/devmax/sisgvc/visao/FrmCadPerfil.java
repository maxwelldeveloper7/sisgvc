/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmCadPerfil.java
 *
 * Created on 06/07/2011, 10:36:34
 */
package br.com.devmax.sisgvc.visao;

import br.com.devmax.sisgvc.controle.Controle;
import br.com.devmax.sisgvc.daos.PerfilDAO;
import br.com.devmax.sisgvc.modelo.PerfilBean;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Maxwell
 */
public class FrmCadPerfil extends javax.swing.JDialog {

    /** Creates new form FrmCadPerfil */
    public FrmCadPerfil(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        InicializarTabela();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbPerfis = new javax.swing.JTable();
        lbNome = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        lbDescricao = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taDescricao = new javax.swing.JTextArea();
        painelBotoes = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        btNovo = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SISGVC - Sistema Gerenciador de Vendas por Consignação");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tbPerfis.setModel(tableModel);
        jScrollPane1.setViewportView(tbPerfis);

        lbNome.setText("Nome:");

        tfNome.setEditable(false);

        lbDescricao.setText("Descrição:");

        taDescricao.setColumns(20);
        taDescricao.setEditable(false);
        taDescricao.setRows(5);
        jScrollPane2.setViewportView(taDescricao);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/file-new-16x16.png"))); // NOI18N
        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(btNovo);

        btEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/edit-16x16.png"))); // NOI18N
        btEditar.setText("Editar");
        btEditar.setEnabled(false);
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btEditar);

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/edit-delete-16x16.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.setEnabled(false);
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });
        jToolBar1.add(btExcluir);

        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/file-save-16x16.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.setEnabled(false);
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });
        jToolBar1.add(btSalvar);

        painelBotoes.add(jToolBar1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/User-Group-32.png"))); // NOI18N
        jLabel1.setText("Perfis de Usuário");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbDescricao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbNome)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                            .addComponent(tfNome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                            .addComponent(painelBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE))
                        .addGap(10, 10, 10)))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(lbNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbDescricao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-450)/2, (screenSize.height-465)/2, 450, 465);
    }// </editor-fold>//GEN-END:initComponents

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        novoPerfil();
    }//GEN-LAST:event_btNovoActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        editarPerfil();
    }//GEN-LAST:event_btEditarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        excluirPerfil();
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        salvar();
    }//GEN-LAST:event_btSalvarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        reiniciaTela();
    }//GEN-LAST:event_formWindowClosing

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lbDescricao;
    private javax.swing.JLabel lbNome;
    private javax.swing.JPanel painelBotoes;
    private javax.swing.JTextArea taDescricao;
    private javax.swing.JTable tbPerfis;
    private javax.swing.JTextField tfNome;
    // End of variables declaration//GEN-END:variables
    private static List<PerfilBean> lista = new ArrayList<PerfilBean>();
    private static PerfilBean perfilBean = new PerfilBean();
    //-Código referente a tabela--------------------------------------------------------------------------------
    private DefaultTableModel tableModel = new DefaultTableModel(null, new String[]{"Nome", "Descrição"});
    private ListSelectionModel lms;
    private int operacao = 0;//se 1: novo, se 2: editar

    private void tbLinhaSelecionada(JTable tb) {
        if (tb.getSelectedRow() != -1) {
            perfilBean.setId(lista.get(tbPerfis.getSelectedRow()).getId());
            tfNome.setText(lista.get(tbPerfis.getSelectedRow()).getNoPerfil());
            taDescricao.setText(lista.get(tbPerfis.getSelectedRow()).getDsPerfil());
            btEditar.setEnabled(true);
            btExcluir.setEnabled(true);
            operacao = 2;
        } else {
            limparCampos();
            editarCampos(false);
            reiniciaBotoes();
        }
    }

    private void InicializarTabela() {

        tbPerfis.getColumnModel().getColumn(0).setPreferredWidth(400);
        tbPerfis.getColumnModel().getColumn(1).setPreferredWidth(200);
        tbPerfis.setModel(tableModel);
        tbPerfis.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lms = tbPerfis.getSelectionModel();
        lms.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    tbLinhaSelecionada(tbPerfis);
                }
            }
        });
        atualizarDadosDaTabela();
    }

    private void atualizarDadosDaTabela() {

        lista = Controle.getPerfis();

        if (tableModel.getRowCount() > 0) {
            limparTabela();
        }

        String[] campos = {null, null, null};

        for (int i = 0; i < lista.size(); i++) {
            if (lista.get(i).getNoPerfil().equalsIgnoreCase("ADMINISTRADOR")) {
                lista.remove(i);
            }

        }

        for (int i = 0; i < lista.size(); i++) {
            tableModel.addRow(campos);
            tableModel.setValueAt(lista.get(i).getNoPerfil(), i, 0);
            tableModel.setValueAt(lista.get(i).getDsPerfil(), i, 1);
        }
    }

    private void limparTabela() {
        while (tableModel.getRowCount() > 0) {
            tableModel.removeRow(0);
        }
    }
    //-Código referente a tabela--------------------------------------------------------------------------------

    private void novoPerfil() {
        habilitaBotoesParaEdicao(true);
        limparCampos();
        operacao = 1;
    }

    private void editarPerfil() {
        habilitaBotoesParaEdicao(true);
    }

    private void excluirPerfil() {
        int opcao = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir este perfil?", null, JOptionPane.OK_CANCEL_OPTION);
        System.out.println(opcao);
        if (opcao == 0) {
            PerfilDAO dao = new PerfilDAO();
            dao.excluir(perfilBean);
            Controle.listarPerfis();
            Controle.frmPerfis.atualizaCbPerfis();
            reiniciaTela();
        }
    }

    private void salvar() {
        //setamos o objeto PerfilBean
        setaPerfilBean();
        //Instanciamos o DAO
        PerfilDAO dao = new PerfilDAO();
        //verifica qual será a operação de peristência a ser realizada
        if (operacao == 1) {
            dao.inserir(perfilBean);
        }
        if (operacao == 2) {
            dao.alterar(perfilBean);
        }
        habilitaBotoesParaEdicao(false);
        //recupera lista atualizada de perfis
        Controle.listarPerfis();
        Controle.listarPrivilegios();
        Controle.frmPerfis.atualizaCbPerfis();
        reiniciaTela();
    }

    private void habilitaBotoesParaEdicao(boolean edicao) {

        if (edicao) {
            btNovo.setEnabled(false);
            btEditar.setEnabled(false);
            btExcluir.setEnabled(false);
            btSalvar.setEnabled(true);
        } else {
            btNovo.setEnabled(true);
            btEditar.setEnabled(true);
            btExcluir.setEnabled(true);
            btSalvar.setEnabled(false);
        }
        editarCampos(edicao);
    }

    private void limparCampos() {
        tfNome.setText("");
        taDescricao.setText("");
        tfNome.requestFocus();
    }

    private void editarCampos(boolean b) {
        tfNome.setEditable(b);
        taDescricao.setEditable(b);
        tbPerfis.setEnabled(!b);
        tfNome.requestFocus();
    }

    public void reiniciaTela() {
        tbPerfis.clearSelection();
        atualizarDadosDaTabela();
        limparCampos();
        reiniciaBotoes();
        editarCampos(false);
        operacao = 0;
    }

    private void reiniciaBotoes() {
        btNovo.setEnabled(true);
        btEditar.setEnabled(false);
        btExcluir.setEnabled(false);
        btSalvar.setEnabled(false);
    }

    private void setaPerfilBean() {
        //O perfilBean.setId() já foi setado no método tbLinhaSelecionada para persistir uma alteração
        perfilBean.setNoPerfil(tfNome.getText());
        perfilBean.setDsPerfil(taDescricao.getText());
    }
}
