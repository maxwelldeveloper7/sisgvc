/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmPerfis.java
 *
 * Created on 19/06/2011, 10:19:32
 */
package br.com.devmax.sisgvc.visao;

import br.com.devmax.sisgvc.controle.Controle;
import br.com.devmax.sisgvc.daos.PrivilegioDAO;
import br.com.devmax.sisgvc.modelo.PerfilBean;
import br.com.devmax.sisgvc.modelo.PrivilegioBean;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Maxwell
 */
public class FrmPerfis extends javax.swing.JDialog {

    /** Creates new form FrmPerfis */
    @SuppressWarnings("OverridableMethodCallInConstructor")
    public FrmPerfis(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        carregarCbPerfis();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnPerfis = new javax.swing.JPanel();
        cbPerfil = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        btCadPerfil = new javax.swing.JButton();
        chbCadUsuario = new javax.swing.JCheckBox();
        chbCadPerfis = new javax.swing.JCheckBox();
        chbCadClientes = new javax.swing.JCheckBox();
        chbCadEquipes = new javax.swing.JCheckBox();
        chbCadFornecedores = new javax.swing.JCheckBox();
        chbCadFuncionarios = new javax.swing.JCheckBox();
        chbCadMedidas = new javax.swing.JCheckBox();
        chbCadProdutos = new javax.swing.JCheckBox();
        chbPedidosVendas = new javax.swing.JCheckBox();
        chbMovEquipes = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SISGVC - Sistema Gerenciador de Vendas por Consignação");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        cbPerfil.setToolTipText("Selecione um perfil");
        cbPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPerfilActionPerformed(evt);
            }
        });

        jLabel1.setText("Permissão de acesso às rotinas:");

        jLabel2.setText("Perfil:");

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btCadPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/7184_16x16.png"))); // NOI18N
        btCadPerfil.setToolTipText("Cadastro de perfis");
        btCadPerfil.setFocusable(false);
        btCadPerfil.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCadPerfil.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCadPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadPerfilActionPerformed(evt);
            }
        });
        jToolBar1.add(btCadPerfil);

        chbCadUsuario.setText("Cadastro de Usuários");
        chbCadUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbCadUsuarioActionPerformed(evt);
            }
        });

        chbCadPerfis.setText("Perfis de Usuário");
        chbCadPerfis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbCadPerfisActionPerformed(evt);
            }
        });

        chbCadClientes.setText("Cadastro de Clientes");
        chbCadClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbCadClientesActionPerformed(evt);
            }
        });

        chbCadEquipes.setText("Cadastro de Equipes");
        chbCadEquipes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbCadEquipesActionPerformed(evt);
            }
        });

        chbCadFornecedores.setText("Cadastro de Fornecedores");
        chbCadFornecedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbCadFornecedoresActionPerformed(evt);
            }
        });

        chbCadFuncionarios.setText("Cadastro de Funcionários");
        chbCadFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbCadFuncionariosActionPerformed(evt);
            }
        });

        chbCadMedidas.setText("Cadastro de Medidas");
        chbCadMedidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbCadMedidasActionPerformed(evt);
            }
        });

        chbCadProdutos.setText("Cadastro de Produtos");
        chbCadProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbCadProdutosActionPerformed(evt);
            }
        });

        chbPedidosVendas.setText("Movimento de Vendas");
        chbPedidosVendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbPedidosVendasActionPerformed(evt);
            }
        });

        chbMovEquipes.setText("Movimento de Equipes");
        chbMovEquipes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbMovEquipesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnPerfisLayout = new javax.swing.GroupLayout(pnPerfis);
        pnPerfis.setLayout(pnPerfisLayout);
        pnPerfisLayout.setHorizontalGroup(
            pnPerfisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPerfisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnPerfisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbMovEquipes)
                    .addComponent(chbPedidosVendas)
                    .addComponent(chbCadProdutos)
                    .addComponent(chbCadMedidas)
                    .addComponent(chbCadFuncionarios)
                    .addComponent(chbCadFornecedores)
                    .addComponent(chbCadEquipes)
                    .addComponent(chbCadClientes)
                    .addComponent(chbCadPerfis)
                    .addGroup(pnPerfisLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chbCadUsuario)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        pnPerfisLayout.setVerticalGroup(
            pnPerfisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPerfisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnPerfisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbCadUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbCadPerfis)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbCadClientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbCadEquipes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbCadFornecedores)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbCadFuncionarios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbCadMedidas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbCadProdutos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbPedidosVendas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbMovEquipes)
                .addGap(27, 27, 27))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/control_panel_access.png"))); // NOI18N
        jLabel3.setText("Controle de Acesso");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(pnPerfis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(385, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnPerfis, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-565)/2, (screenSize.height-435)/2, 565, 435);
    }// </editor-fold>//GEN-END:initComponents

    private void cbPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPerfilActionPerformed
        if (!cbPerfil.getSelectedItem().equals("")) {
            //seta os dados de acessos às rotinas do referido pervil
            carregarPainelCheckBox(cbPerfil.getSelectedItem().toString());
        } else {
            desmarcarCheckBox();
        }
    }//GEN-LAST:event_cbPerfilActionPerformed

    private void chbCadUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbCadUsuarioActionPerformed
        permiteAcesso(chbCadUsuario.getText(), chbCadUsuario.isSelected());
    }//GEN-LAST:event_chbCadUsuarioActionPerformed

    private void chbCadPerfisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbCadPerfisActionPerformed
        permiteAcesso(chbCadPerfis.getText(), chbCadPerfis.isSelected());
    }//GEN-LAST:event_chbCadPerfisActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        limparTela();
    }//GEN-LAST:event_formWindowClosing

    private void btCadPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadPerfilActionPerformed
        Controle.abreFrmCadPerfil();
    }//GEN-LAST:event_btCadPerfilActionPerformed

    private void chbCadEquipesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbCadEquipesActionPerformed
        permiteAcesso(chbCadEquipes.getText(), chbCadEquipes.isSelected());
    }//GEN-LAST:event_chbCadEquipesActionPerformed

    private void chbCadFornecedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbCadFornecedoresActionPerformed
        permiteAcesso(chbCadFornecedores.getText(), chbCadFornecedores.isSelected());
    }//GEN-LAST:event_chbCadFornecedoresActionPerformed

    private void chbCadFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbCadFuncionariosActionPerformed
        permiteAcesso(chbCadFuncionarios.getText(), chbCadFuncionarios.isSelected());
    }//GEN-LAST:event_chbCadFuncionariosActionPerformed

    private void chbCadProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbCadProdutosActionPerformed
        permiteAcesso(chbCadProdutos.getText(), chbCadProdutos.isSelected());
    }//GEN-LAST:event_chbCadProdutosActionPerformed

    private void chbPedidosVendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbPedidosVendasActionPerformed
        permiteAcesso(chbPedidosVendas.getText(), chbPedidosVendas.isSelected());
    }//GEN-LAST:event_chbPedidosVendasActionPerformed

    private void chbCadClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbCadClientesActionPerformed
        permiteAcesso(chbCadClientes.getText(), chbCadClientes.isSelected());
    }//GEN-LAST:event_chbCadClientesActionPerformed

    private void chbMovEquipesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbMovEquipesActionPerformed
        permiteAcesso(chbMovEquipes.getText(), chbMovEquipes.isSelected());
    }//GEN-LAST:event_chbMovEquipesActionPerformed

    private void chbCadMedidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbCadMedidasActionPerformed
        permiteAcesso(chbCadMedidas.getText(), chbCadMedidas.isSelected());
    }//GEN-LAST:event_chbCadMedidasActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCadPerfil;
    private javax.swing.JComboBox cbPerfil;
    private javax.swing.JCheckBox chbCadClientes;
    private javax.swing.JCheckBox chbCadEquipes;
    private javax.swing.JCheckBox chbCadFornecedores;
    private javax.swing.JCheckBox chbCadFuncionarios;
    private javax.swing.JCheckBox chbCadMedidas;
    private javax.swing.JCheckBox chbCadPerfis;
    private javax.swing.JCheckBox chbCadProdutos;
    private javax.swing.JCheckBox chbCadUsuario;
    private javax.swing.JCheckBox chbMovEquipes;
    private javax.swing.JCheckBox chbPedidosVendas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel pnPerfis;
    // End of variables declaration//GEN-END:variables
    private static List<PrivilegioBean> privilegios = new ArrayList<PrivilegioBean>();
    private static List<PerfilBean> perfis = new ArrayList<PerfilBean>();
    private static PrivilegioBean privilegioBean = new PrivilegioBean();

    private void carregarCbPerfis() {
        //recuperamos uma lista de perfis do banco de dados.        
        perfis = Controle.getPerfis();
        //limpamos o combobox
        cbPerfil.removeAllItems();
        //atribuímos o primeiro valor
        cbPerfil.addItem("");

        for (int i = 0; i < perfis.size(); i++) {
            cbPerfil.addItem(perfis.get(i).getNoPerfil());
        }
    }

    /**
     * Este método percorre a lista de privilégios pesquisando o perfil passado
     * por parâmetro e marcando os checkboxes referentes às rotinas das quais
     * o perfil de usuário tem acesso.
     * @param perfilPar
     */
    private void carregarPainelCheckBox(String perfilPar) {
        //recuperamos uma lista de privilégios do banco de dados.
        privilegios = Controle.getPrivilegios();

        for (int i = 0; i < privilegios.size(); i++) {
            if (privilegios.get(i).getPerfil().getNoPerfil().equals(perfilPar)) {
                //setamos o perfil selecionado para o objeto statico perfil que
                //será utilizado para realiar persistência ao marcar ou desmarcar algum checkbox

                if (privilegios.get(i).getRotina().getNomeRotina().equalsIgnoreCase(chbCadUsuario.getText())) {
                    chbCadUsuario.setSelected(privilegios.get(i).getAcessar());
                }
                if (privilegios.get(i).getRotina().getNomeRotina().equalsIgnoreCase(chbCadPerfis.getText())) {
                    chbCadPerfis.setSelected(privilegios.get(i).getAcessar());
                }
                if (privilegios.get(i).getRotina().getNomeRotina().equalsIgnoreCase(chbCadClientes.getText())) {
                    chbCadClientes.setSelected(privilegios.get(i).getAcessar());
                }
                if (privilegios.get(i).getRotina().getNomeRotina().equalsIgnoreCase(chbCadEquipes.getText())) {
                    chbCadEquipes.setSelected(privilegios.get(i).getAcessar());
                }
                if (privilegios.get(i).getRotina().getNomeRotina().equalsIgnoreCase(chbCadFornecedores.getText())) {
                    chbCadFornecedores.setSelected(privilegios.get(i).getAcessar());
                }
                if (privilegios.get(i).getRotina().getNomeRotina().equalsIgnoreCase(chbCadFuncionarios.getText())) {
                    chbCadFuncionarios.setSelected(privilegios.get(i).getAcessar());
                }
                if (privilegios.get(i).getRotina().getNomeRotina().equalsIgnoreCase(chbCadMedidas.getText())) {
                    chbCadMedidas.setSelected(privilegios.get(i).getAcessar());
                }
                if (privilegios.get(i).getRotina().getNomeRotina().equalsIgnoreCase(chbCadProdutos.getText())) {
                    chbCadProdutos.setSelected(privilegios.get(i).getAcessar());
                }
                if (privilegios.get(i).getRotina().getNomeRotina().equalsIgnoreCase(chbPedidosVendas.getText())) {
                    chbPedidosVendas.setSelected(privilegios.get(i).getAcessar());
                }
                if (privilegios.get(i).getRotina().getNomeRotina().equalsIgnoreCase(chbMovEquipes.getText())) {
                    chbMovEquipes.setSelected(privilegios.get(i).getAcessar());
                }
                //System.out.println(privilegios.get(i).getPerfil().getNoPerfil() + "-" + privilegios.get(i).getRotina().getNomeRotina() + "-" + privilegios.get(i).getAcessar());
            }

        }
    }

    private void desmarcarCheckBox() {
        chbCadUsuario.setSelected(false);
        chbCadPerfis.setSelected(false);
        chbCadEquipes.setSelected(false);
        chbCadFornecedores.setSelected(false);
        chbCadFuncionarios.setSelected(false);
        chbCadMedidas.setSelected(false);
        chbCadProdutos.setSelected(false);
        chbPedidosVendas.setSelected(false);
    }

    private void limparTela() {
        desmarcarCheckBox();
        cbPerfil.setSelectedIndex(0);
    }

    public void setCbPerfilItem(String item) {
        cbPerfil.setSelectedItem(item);
    }

    private void permiteAcesso(String nomeRotina, boolean acesso) {
        if (cbPerfil.getSelectedIndex() != 0) {
            //seta o perfil selecinado
            privilegioBean = getPrivilegio(nomeRotina, cbPerfil.getSelectedItem().toString());
            privilegioBean.setAcessar(acesso);
            //System.out.println("privilegio id: " + privilegioBean.getId() + " perfil: " + privilegioBean.getPerfil().getNoPerfil() + " - acesso à rotina:" + privilegioBean.getRotina().getNomeRotina() + ": " + privilegioBean.getAcessar());
            //instanciamos o DAO e perssistmos os dados.
            PrivilegioDAO dao = new PrivilegioDAO();
            dao.alterar(privilegioBean);
        } else {
            JOptionPane.showMessageDialog(this, "Primeiro você precisa selecionar um perfil de usuário.");
            desmarcarCheckBox();
            cbPerfil.requestFocus();
        }


    }

    /**
     * Este método retorna um objeto privilegioBean com os dados que serão persistidos
     * @param nomeRotina
     * nomePerfil
     */
    private PrivilegioBean getPrivilegio(String nomeRotina, String nomePervil) {
        PrivilegioBean privilegio = new PrivilegioBean();
        for (int i = 0; i < privilegios.size(); i++) {
            if (privilegios.get(i).getRotina().getNomeRotina().equalsIgnoreCase(nomeRotina)
                    && privilegios.get(i).getPerfil().getNoPerfil().equalsIgnoreCase(nomePervil)) {
                privilegio = privilegios.get(i);
                break;
            }
        }
        return privilegio;
    }

    public void atualizaCbPerfis() {

        cbPerfil.setSelectedIndex(0);
        //não removemos todos os itens de uma vez pois o método cbPerfilActionPerformed é acionado
        //e caso não haja pelo menos 1 item lançara uma exceção.        
        //System.out.println("numero de itens: " + cbPerfil.getItemCount());
        for (int i = cbPerfil.getItemCount() - 1; i > 0; i--) {
            if (cbPerfil.getItemCount() > 0) {
                cbPerfil.removeItemAt(i);
            }
        }

        perfis = Controle.getPerfis();
        for (int i = 0; i < perfis.size(); i++) {
            cbPerfil.addItem(perfis.get(i).getNoPerfil());
            //System.out.println(perfis.get(i).getNoPerfil());
        }
    }
}
