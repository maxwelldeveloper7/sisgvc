/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmCadPerfil.java
 *
 * Created on 06/07/2011, 10:36:34
 */
package br.com.devmax.sisgvc.visao;

import br.com.devmax.sisgvc.daos.MedidaDAO;
import br.com.devmax.sisgvc.daos.ProdutoDAO;
import br.com.devmax.sisgvc.modelo.MedidaBean;
import br.com.devmax.sisgvc.modelo.ProdutoBean;
import java.awt.KeyboardFocusManager;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Maxwell
 */
public class FrmCadBrinde extends javax.swing.JDialog {

    /** Creates new form FrmCadPerfil */
    @SuppressWarnings("OverridableMethodCallInConstructor")
    public FrmCadBrinde(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        InicializarTabela();
        carregaCbUnidades();
        configurarFocoEmTextField();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbProdutos = new javax.swing.JTable();
        lbProduto = new javax.swing.JLabel();
        tfProduto = new javax.swing.JTextField();
        cbUnidade = new javax.swing.JComboBox();
        lbUnidade = new javax.swing.JLabel();
        ftfEstoque = new javax.swing.JFormattedTextField();
        lbEstoque = new javax.swing.JLabel();
        lbVlCompra = new javax.swing.JLabel();
        ftfCompra = new javax.swing.JFormattedTextField();
        painelBotoes = new javax.swing.JPanel();
        btNovo = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SISGVC - Sistema Gerenciador de Vendas por Consignação");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/Present32.png"))); // NOI18N
        jLabel1.setText("Cadastro de Brindes");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbProdutos.setModel(tableModel);
        jScrollPane1.setViewportView(tbProdutos);

        lbProduto.setText("Produto:");

        tfProduto.setEditable(false);

        cbUnidade.setEnabled(false);

        lbUnidade.setText("Unidade:");

        ftfEstoque.setEditable(false);
        ftfEstoque.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        ftfEstoque.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ftfEstoque.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        lbEstoque.setText("Estoque:");

        lbVlCompra.setText("Valor:");

        ftfCompra.setEditable(false);
        ftfCompra.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        ftfCompra.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ftfCompra.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ftfCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbVlCompra, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                        .addGap(541, 541, 541))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbProduto))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbUnidade))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbEstoque)
                            .addComponent(ftfEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(35, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbProduto)
                    .addComponent(lbUnidade)
                    .addComponent(lbEstoque))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lbVlCompra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ftfCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/file-new-16x16.png"))); // NOI18N
        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });
        painelBotoes.add(btNovo);

        btEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/edit-16x16.png"))); // NOI18N
        btEditar.setText("Editar");
        btEditar.setEnabled(false);
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });
        painelBotoes.add(btEditar);

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/edit-delete-16x16.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.setEnabled(false);
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });
        painelBotoes.add(btExcluir);

        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/file-save-16x16.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.setEnabled(false);
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });
        painelBotoes.add(btSalvar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(painelBotoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-676)/2, (screenSize.height-645)/2, 676, 645);
    }// </editor-fold>//GEN-END:initComponents

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        novoProduto();
    }//GEN-LAST:event_btNovoActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        editarProduto();
    }//GEN-LAST:event_btEditarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        excluirProduto();
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        salvar();
    }//GEN-LAST:event_btSalvarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        limparTela();
    }//GEN-LAST:event_formWindowClosing
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox cbUnidade;
    private javax.swing.JFormattedTextField ftfCompra;
    private javax.swing.JFormattedTextField ftfEstoque;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbEstoque;
    private javax.swing.JLabel lbProduto;
    private javax.swing.JLabel lbUnidade;
    private javax.swing.JLabel lbVlCompra;
    private javax.swing.JPanel painelBotoes;
    private javax.swing.JTable tbProdutos;
    private javax.swing.JTextField tfProduto;
    // End of variables declaration//GEN-END:variables
    private static List<ProdutoBean> lista = new ArrayList<ProdutoBean>();
    private static ProdutoBean produtoBean = new ProdutoBean();
    private static List<MedidaBean> medidas = new ArrayList<MedidaBean>();
    private static MedidaBean medidaBean = new MedidaBean();
    //-Código referente a tabela--------------------------------------------------------------------------------
    private DefaultTableModel tableModel = new DefaultTableModel(null, new String[]{"Produto", "Unidade", "Estoque", "Valor"});
    private ListSelectionModel lms;
    private int operacao = 0;//se 1: novo, se 2: editar

    private void tbLinhaSelecionada(JTable tb) {
        if (tb.getSelectedRow() != -1) {
            produtoBean.setId(lista.get(tbProdutos.getSelectedRow()).getId());
            tfProduto.setText(lista.get(tbProdutos.getSelectedRow()).getProduto());
            cbUnidade.setSelectedItem(lista.get(tbProdutos.getSelectedRow()).getMedida().getMedida());
            ftfEstoque.setText(lista.get(tbProdutos.getSelectedRow()).getEstoqueStr());
            ftfCompra.setText(lista.get(tbProdutos.getSelectedRow()).getVlCompraStr());
            btEditar.setEnabled(true);
            btExcluir.setEnabled(true);
            operacao = 2;
        } else {
            limparCampos();
            editarCampos(false);
            reiniciaBotoes();
        }
    }

    public void InicializarTabela() {

        tbProdutos.getColumnModel().getColumn(0).setPreferredWidth(300);
        tbProdutos.setModel(tableModel);
        tbProdutos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lms = tbProdutos.getSelectionModel();
        lms.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    tbLinhaSelecionada(tbProdutos);
                }
            }
        });
        atualizarDadosDaTabela();
    }

    private void atualizarDadosDaTabela() {
        ProdutoDAO dao = new ProdutoDAO();
        lista = dao.listar();

        if (tableModel.getRowCount() > 0) {
            limparTabela();
        }

        String[] campos = {null, null, null, null};


        for (int i = 0; i < lista.size(); i++) {
            tableModel.addRow(campos);
            tableModel.setValueAt(lista.get(i).getProduto(), i, 0);
            tableModel.setValueAt(lista.get(i).getMedida().getMedida(), i, 1);
            tableModel.setValueAt(lista.get(i).getEstoqueStr(), i, 2);
            tableModel.setValueAt(lista.get(i).getVlCompraStr(), i, 3);
        }
    }

    private void limparTabela() {
        while (tableModel.getRowCount() > 0) {
            tableModel.removeRow(0);
        }
    }
    //-Código referente a tabela--------------------------------------------------------------------------------

    private void novoProduto() {
        habilitaBotoesParaEdicao(true);
        limparCampos();
        operacao = 1;
        tbProdutos.setEnabled(false);
    }

    private void editarProduto() {
        habilitaBotoesParaEdicao(true);
        tbProdutos.setEnabled(false);
    }

    private void excluirProduto() {
        int opcao = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir este produto?", null, JOptionPane.OK_CANCEL_OPTION);
        System.out.println(opcao);
        if (opcao == 0) {
            ProdutoDAO dao = new ProdutoDAO();
            dao.excluir(produtoBean);
            reiniciaTela();
        }
    }

    private void salvar() {
        //setamos o objeto produtoBean
        setaProdutoBean();
        //Instanciamos o DAO
        ProdutoDAO dao = new ProdutoDAO();
        //verifica qual será a operação de peristência a ser realizada
        if (operacao == 1) {
            dao.inserir(produtoBean);
        }
        if (operacao == 2) {
            dao.alterar(produtoBean);
        }
        reiniciaTela();
    }

    private void habilitaBotoesParaEdicao(boolean edicao) {

        if (edicao) {
            btNovo.setEnabled(false);
            btEditar.setEnabled(false);
            btExcluir.setEnabled(false);
            btSalvar.setEnabled(true);
        } else {
            btNovo.setEnabled(true);
            btEditar.setEnabled(true);
            btExcluir.setEnabled(true);
            btSalvar.setEnabled(false);
        }
        editarCampos(edicao);
    }

    private void limparCampos() {
        tfProduto.setText("");
        cbUnidade.setSelectedIndex(0);
        ftfEstoque.setText("0");
        ftfCompra.setText("0,00");
        tfProduto.requestFocus();
    }

    private void editarCampos(boolean b) {
        tfProduto.setEditable(b);
        cbUnidade.setEnabled(b);
        ftfEstoque.setEditable(b);
        ftfCompra.setEditable(b);
        tbProdutos.setEnabled(!b);
        tfProduto.requestFocus();
    }

    private void reiniciaTela() {
        tbProdutos.clearSelection();
        atualizarDadosDaTabela();
        limparCampos();
        reiniciaBotoes();
        editarCampos(false);
        operacao = 0;
    }

    private void limparTela() {
        tbProdutos.clearSelection();
        limparCampos();
        reiniciaBotoes();
        operacao = 0;
    }

    private void reiniciaBotoes() {
        btNovo.setEnabled(true);
        btEditar.setEnabled(false);
        btExcluir.setEnabled(false);
        btSalvar.setEnabled(false);
    }

    private void setaProdutoBean() {
        //O produtoBean.setId() já foi setado no método tbLinhaSelecionada para persistir uma alteração
        produtoBean.setProduto(tfProduto.getText());
        setaMedidaBean(cbUnidade.getSelectedItem().toString());
        produtoBean.setMedida(medidaBean);
        produtoBean.setEstoque(ftfEstoque.getText());
        produtoBean.setVlCompra(ftfCompra.getText());
        produtoBean.setVlVenda("0,00");
        produtoBean.setTipo(2);
    }

    private void carregaCbUnidades() {
        cbUnidade.removeAllItems();//removemos todos os itens da lista
        cbUnidade.addItem("");//adicionamos um item em branco

        MedidaDAO dao = new MedidaDAO();//instanciamos um DAO de medidas
        medidas = dao.listar();//carregamos uma lista de medidas com o resultado da busca no banco de dados.

        for (int i = 0; i < medidas.size(); i++) {
            cbUnidade.addItem(medidas.get(i).getMedida());//caregamos o combobox com a lista de unidades de medidas.
        }
    }

    private void setaMedidaBean(String medida) {
        for (int i = 0; i < medidas.size(); i++) {
            if (medidas.get(i).getMedida().equalsIgnoreCase(medida)) {
                medidaBean.setId(medidas.get(i).getId());
                medidaBean.setMedida(medidas.get(i).getMedida());
                break;
            }
        }
    }

    private void configurarFocoEmTextField() {
         //Faz com que toda vez que um formattedTextField receba focus selecione seu conteúdo
        KeyboardFocusManager.getCurrentKeyboardFocusManager().addPropertyChangeListener("permanentFocusOwner", new PropertyChangeListener() {

            public void propertyChange(final PropertyChangeEvent e) {
                if (e.getNewValue() instanceof JFormattedTextField) {
                    SwingUtilities.invokeLater(new Runnable() {

                        public void run() {
                            JFormattedTextField formattedTextField = (JFormattedTextField) e.getNewValue();
                            formattedTextField.selectAll();
                        }
                    });
                }
            }
        });
    }
}
