/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmCadPerfil.java
 *
 * Created on 06/07/2011, 10:36:34
 */
package br.com.devmax.sisgvc.visao;

import br.com.devmax.sisgvc.daos.CidadeDAO;
import br.com.devmax.sisgvc.daos.ClienteDAO;
import br.com.devmax.sisgvc.daos.ConfiguracaoDAO;
import br.com.devmax.sisgvc.daos.EquipeDAO;
import br.com.devmax.sisgvc.daos.PedidoDAO;
import br.com.devmax.sisgvc.modelo.CidadeBean;
import br.com.devmax.sisgvc.modelo.ClienteBean;
import br.com.devmax.sisgvc.modelo.EquipeBean;
import br.com.devmax.sisgvc.modelo.PedidoBean;
import br.com.devmax.sisgvc.modelo.StatusVendaBean;
import br.com.devmax.sisgvc.modelo.Utilidades;
import br.com.devmax.sisgvc.visao.modelos.ColunasNumericas;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import javax.swing.AbstractListModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Maxwell
 */
public class FrmVendasPorCliente extends javax.swing.JDialog {

    /** Creates new form FrmCadPerfil */
    public FrmVendasPorCliente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        carregarCbEquipe();
        carregarCbCidade();
        carregarCbCliente();
        inicializarDatas();
        inicializarTabela();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbVendas = new javax.swing.JTable();
        chCliente = new javax.swing.JCheckBox();
        cbCliente = new javax.swing.JComboBox();
        chEquipe = new javax.swing.JCheckBox();
        cbEquipe = new javax.swing.JComboBox();
        chStatus = new javax.swing.JCheckBox();
        cbcidade = new javax.swing.JComboBox();
        chCidade = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        lbDataInical1 = new javax.swing.JLabel();
        lbDataFinal1 = new javax.swing.JLabel();
        ftfDataFinalv = new javax.swing.JFormattedTextField();
        ftfDataInicial = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        btVisualizar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlStatus = new javax.swing.JList();
        btRelatorio = new javax.swing.JButton();
        lbRegistros = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SISGVC - Sistema Gerenciador de Vendas por Consignação");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/product-sales-report-32.png"))); // NOI18N
        jLabel1.setText("Vendas por Cliente");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/search-16x16.png"))); // NOI18N
        btPesquisar.setText("Pesquisar");
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        tbVendas.setModel(tableModel);
        jScrollPane1.setViewportView(tbVendas);

        chCliente.setText("Cliente");

        chEquipe.setText("Equipe");

        chStatus.setText("Status");

        chCidade.setText("Cidade");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbDataInical1.setText("Inicio:");

        lbDataFinal1.setText("Fim:");

        try {
            ftfDataFinalv.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfDataFinalv.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        try {
            ftfDataInicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfDataInicial.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        jLabel2.setText("Data de Vencimento");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ftfDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbDataInical1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbDataFinal1)
                            .addComponent(ftfDataFinalv, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbDataInical1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftfDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbDataFinal1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftfDataFinalv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btVisualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/visualizar.png"))); // NOI18N
        btVisualizar.setText("Visualizar");
        btVisualizar.setEnabled(false);
        btVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVisualizarActionPerformed(evt);
            }
        });

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jlStatus.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Consignado", "Pendente", "Devolvido", "Concluído", "Perdido" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jlStatus);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(chEquipe)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbEquipe, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(chCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chCidade)
                            .addComponent(chStatus))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(cbcidade, 0, 155, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btPesquisar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(btVisualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chEquipe)
                            .addComponent(cbEquipe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chCidade)
                            .addComponent(cbcidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btPesquisar))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(chCliente)
                                .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(chStatus)
                                .addComponent(btVisualizar))))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
                .addContainerGap())
        );

        btRelatorio.setText("Gerar Relatório");
        btRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRelatorioActionPerformed(evt);
            }
        });

        lbRegistros.setText("Registros: 0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btRelatorio))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbRegistros)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(btRelatorio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbRegistros)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-857)/2, (screenSize.height-659)/2, 857, 659);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //reiniciaTela();
    }//GEN-LAST:event_formWindowClosing

    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        atualizarDadosDaTabela();
    }//GEN-LAST:event_btPesquisarActionPerformed

    private void btVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVisualizarActionPerformed
        visualizarPedido();
    }//GEN-LAST:event_btVisualizarActionPerformed

    private void btRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRelatorioActionPerformed
        abrirRelatorio(lista);
    }//GEN-LAST:event_btRelatorioActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btPesquisar;
    private javax.swing.JButton btRelatorio;
    private javax.swing.JButton btVisualizar;
    private javax.swing.JComboBox cbCliente;
    private javax.swing.JComboBox cbEquipe;
    private javax.swing.JComboBox cbcidade;
    private javax.swing.JCheckBox chCidade;
    private javax.swing.JCheckBox chCliente;
    private javax.swing.JCheckBox chEquipe;
    private javax.swing.JCheckBox chStatus;
    private javax.swing.JFormattedTextField ftfDataFinalv;
    private javax.swing.JFormattedTextField ftfDataInicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList jlStatus;
    private javax.swing.JLabel lbDataFinal1;
    private javax.swing.JLabel lbDataInical1;
    private javax.swing.JLabel lbRegistros;
    private javax.swing.JTable tbVendas;
    // End of variables declaration//GEN-END:variables
    private static List<PedidoBean> lista = new ArrayList<PedidoBean>();
    private static PedidoBean vendaBeanLinha;
    private static List<EquipeBean> equipes = new ArrayList<EquipeBean>();
    private static List<ClienteBean> clientes = new ArrayList<ClienteBean>();
    private static List<CidadeBean> cidades = new ArrayList<CidadeBean>();
    //-Código referente a tabela--------------------------------------------------------------------------------
    private DefaultTableModel tableModel = new DefaultTableModel(null, new String[]{"Pedido", "Cliente", "Cidade", "Valor(R$)", "Data Entrega", "Data Vencimento"});
    private ListSelectionModel lms;

    private void tbLinhaSelecionada(JTable tb) {
        if (tb.getSelectedRow() != -1) {
            vendaBeanLinha = new PedidoBean();
            vendaBeanLinha.setId(lista.get(tb.getSelectedRow()).getId());
            vendaBeanLinha.setEquipe(lista.get(tb.getSelectedRow()).getEquipe());
            vendaBeanLinha.setCliente(lista.get(tb.getSelectedRow()).getCliente());
            vendaBeanLinha.setDataEntrega(lista.get(tb.getSelectedRow()).getDataEntrega());
            vendaBeanLinha.setDataVencimento(lista.get(tb.getSelectedRow()).getDataVencimento());
            vendaBeanLinha.setStatus(lista.get(tb.getSelectedRow()).getStatus());
            vendaBeanLinha.setVendedor(lista.get(tb.getSelectedRow()).getVendedor());
            vendaBeanLinha.setDesconto(lista.get(tb.getSelectedRow()).getDesconto());
            vendaBeanLinha.setValorPedido(lista.get(tb.getSelectedRow()).getValorPedido());
            vendaBeanLinha.setValorRecebido(lista.get(tb.getSelectedRow()).getValorRecebido());
            ConfiguracaoDAO dao = new ConfiguracaoDAO();
            if(dao.liberado()){
                btVisualizar.setEnabled(true);
            }            
        } else {
            vendaBeanLinha = null;            
            btVisualizar.setEnabled(false);
        }
    }

    private void inicializarTabela() {

        ColunasNumericas cnD = new ColunasNumericas();
        ColunasNumericas cnC = new ColunasNumericas();
        cnC.setHorizontalAlignment(SwingConstants.CENTER);
        cnD.setHorizontalAlignment(SwingConstants.RIGHT);
        tbVendas.getColumnModel().getColumn(0).setCellRenderer(cnD);
        tbVendas.getColumnModel().getColumn(0).setPreferredWidth(50);
        tbVendas.getColumnModel().getColumn(1).setPreferredWidth(200);
        tbVendas.getColumnModel().getColumn(2).setPreferredWidth(200);
        tbVendas.getColumnModel().getColumn(3).setCellRenderer(cnD);
        tbVendas.getColumnModel().getColumn(3).setPreferredWidth(70);
        tbVendas.getColumnModel().getColumn(4).setCellRenderer(cnC);
        tbVendas.getColumnModel().getColumn(5).setCellRenderer(cnC);
        tbVendas.setModel(tableModel);
        tbVendas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lms = tbVendas.getSelectionModel();
        lms.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    tbLinhaSelecionada(tbVendas);
                }
            }
        });
    }

    public void atualizarDadosDaTabela() {
        PedidoDAO dao = new PedidoDAO();

        lista = dao.listar(PedidoBean(), chCidade.isSelected(), chCliente.isSelected(), Utilidades.formataDataSQL(ftfDataInicial.getText()), Utilidades.formataDataSQL(ftfDataFinalv.getText()), chEquipe.isSelected(), chStatus.isSelected(), statusBean());

        if (tableModel.getRowCount() > 0) {
            limparTabela();
        }

        String[] campos = {null, null, null, null, null};


        for (int i = 0; i < lista.size(); i++) {
            tableModel.addRow(campos);
            tableModel.setValueAt(lista.get(i).getId(), i, 0);
            tableModel.setValueAt(lista.get(i).getCliente().getNome(), i, 1);
            tableModel.setValueAt(lista.get(i).getCliente().getCidade().getCidade(), i, 2);
            tableModel.setValueAt(lista.get(i).getValorPedidoSTR(), i, 3);
            tableModel.setValueAt(lista.get(i).getDataEntregaStr(), i, 4);
            tableModel.setValueAt(lista.get(i).getDataVencimentoStr(), i, 5);
        }
        lbRegistros.setText("Registros: "+lista.size());
    }

    private void limparTabela() {
        while (tableModel.getRowCount() > 0) {
            tableModel.removeRow(0);
        }
        lbRegistros.setText("Registros: 0");
    }
    //-Código referente a tabela--------------------------------------------------------------------------------

    private void visualizarPedido() {
        btVisualizar.setEnabled(false);
        FrmCadPedido frmCadPedido = new FrmCadPedido(null, true, vendaBeanLinha);
        frmCadPedido.setVisible(true);

    }

    public void reiniciaTela() {
        tbVendas.clearSelection();
        carregarCbEquipe();
        atualizarDadosDaTabela();
        btVisualizar.setEnabled(false);
    }

    private void inicializarDatas() {
        Calendar data = Calendar.getInstance();
        data.setTime(new Date());
        SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");
        String novoFormato;
        novoFormato = formatador.format(data.getTime());
        ftfDataFinalv.setText(novoFormato);
        data.add(Calendar.DAY_OF_MONTH, -7);
        novoFormato = formatador.format(data.getTime());
        ftfDataInicial.setText(novoFormato);
    }

    private void carregarCbEquipe() {
        EquipeDAO edao = new EquipeDAO();
        equipes = edao.listar();
        cbEquipe.removeAllItems();
        for (int i = 0; i < equipes.size(); i++) {
            cbEquipe.addItem(equipes.get(i).getNome());
        }        
    }

    private void carregarCbCliente() {
        ClienteDAO cdao = new ClienteDAO();
        clientes = cdao.listar();
        cbCliente.removeAllItems();
        for (int i = 0; i < clientes.size(); i++) {
            cbCliente.addItem(clientes.get(i).getNome());
        }
    }

    private void carregarCbCidade() {
        CidadeDAO cidDao = new CidadeDAO();
        cidades = cidDao.listar();
        cbcidade.removeAllItems();
        for (int i = 0; i < cidades.size(); i++) {
            cbcidade.addItem(cidades.get(i).getCidade());
        }
    }
    
    private EquipeBean equipeBean() {
        EquipeBean e = new EquipeBean();
        for (int i = 0; i < equipes.size(); i++) {
            if (equipes.get(i).getNome().equals(cbEquipe.getSelectedItem().toString())) {
                e.setId(equipes.get(i).getId());
                e.setNome(equipes.get(i).getNome());
                break;
            }
        }
        return e;
    }

    private ClienteBean clienteBean() {
        ClienteBean c = new ClienteBean();
        for (int i = 0; i < clientes.size(); i++) {
            if (clientes.get(i).getNome().equals(cbCliente.getSelectedItem().toString())) {
                c.setId(clientes.get(i).getId());
                c.setBairro(clientes.get(i).getBairro());
                c.setCelular(clientes.get(i).getCelular());
                c.setCep(clientes.get(i).getCep());
                c.setCidade(cidadeBean());
                c.setCpf(clientes.get(i).getCpf());
                c.setDataNascimento(clientes.get(i).getDataNascimento());
                c.setLogradouro(clientes.get(i).getLogradouro());
                c.setNome(clientes.get(i).getNome());
                c.setNumero(clientes.get(i).getNumero());
                c.setRg(clientes.get(i).getRg());
                c.setTelefone(clientes.get(i).getTelefone()); 
                
                break;
            }
        }
        return c;
    }

    private CidadeBean cidadeBean() {
        CidadeBean c = new CidadeBean();
        for (int i = 0; i < cidades.size(); i++) {
            if (cidades.get(i).getCidade().equals(cbcidade.getSelectedItem().toString())) {
                c.setId(cidades.get(i).getId());
                c.setCidade(cidades.get(i).getCidade());
                c.setUf(cidades.get(i).getUf());
                break;
            }
        }
        return c;
    }

    private List<StatusVendaBean> statusBean() {
        List<StatusVendaBean> l = new ArrayList<StatusVendaBean>();
        StatusVendaBean s;
        
        l.clear();
        
        for (int i = 0; i < jlStatus.getSelectedValuesList().size(); i++) {
            s = new StatusVendaBean();
            s.setStatus(jlStatus.getSelectedValuesList().get(i).toString().toUpperCase());
            l.add(s);
        }
        return l;
    }

    private PedidoBean PedidoBean() {
        PedidoBean v = new PedidoBean();
        v.setCliente(clienteBean());
        v.setEquipe(equipeBean());
        return v;
    }

    private void abrirRelatorio(List<PedidoBean> v) {
        
        try {
            String arquivoJasper = "vendas.jasper";
            JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(v);
            HashMap map = new HashMap();
            JasperPrint print = JasperFillManager.fillReport(arquivoJasper, map, ds);
            JasperViewer.viewReport(print, false);
            JasperViewer.setDefaultLookAndFeelDecorated(true);
        } catch (JRException e) {
            JOptionPane.showMessageDialog(null, "Falha ao gerar relatório!\n" + e.getMessage());
            System.out.print(e.getStackTrace());
        }
    }
}
