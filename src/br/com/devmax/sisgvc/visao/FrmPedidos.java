/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmCadPerfil.java
 *
 * Created on 06/07/2011, 10:36:34
 */
package br.com.devmax.sisgvc.visao;

import br.com.devmax.sisgvc.daos.CidadeDAO;
import br.com.devmax.sisgvc.daos.ClienteDAO;
import br.com.devmax.sisgvc.daos.EquipeDAO;
import br.com.devmax.sisgvc.daos.PedidoDAO;
import br.com.devmax.sisgvc.modelo.CidadeBean;
import br.com.devmax.sisgvc.modelo.ClienteBean;
import br.com.devmax.sisgvc.modelo.EquipeBean;
import br.com.devmax.sisgvc.modelo.PedidoBean;
import br.com.devmax.sisgvc.modelo.StatusVendaBean;
import br.com.devmax.sisgvc.modelo.Utilidades;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Maxwell
 */
public class FrmPedidos extends javax.swing.JDialog {

    /**
     * Creates new form FrmCadPerfil
     */
    public FrmPedidos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        carregarCbEquipes();
        carregarCbCidades();
        cbStatus.removeAllItems();
        cbStatus.addItem("CONSIGNADO");
        cbStatus.addItem("PENDENTE");
        cbStatus.addItem("CONCLUÍDO");
        cbStatus.addItem("DEVOLVIDO");
        cbStatus.addItem("PERDIDO");
        cbStatus.addItem("SEM ITENS DE VENDA");
        inicializarDatas();
        inicializarTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelBotoes = new javax.swing.JPanel();
        btNovo = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbVendas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        lbDataFinal1 = new javax.swing.JLabel();
        ftfDataFinalv = new javax.swing.JFormattedTextField();
        ftfDataInicial = new javax.swing.JFormattedTextField();
        lbDataInical1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        cbEquipe = new javax.swing.JComboBox();
        chbEquipe = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        cbCliente = new javax.swing.JComboBox();
        chbCliente = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        cbStatus = new javax.swing.JComboBox();
        chbStatus = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        cbCidade = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        btLocPedido = new javax.swing.JButton();
        btCliente = new javax.swing.JButton();
        lbCountResgistros = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SISGVC - Sistema Gerenciador de Vendas por Consignação");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/file-new-16x16.png"))); // NOI18N
        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });
        painelBotoes.add(btNovo);

        btEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/edit-16x16.png"))); // NOI18N
        btEditar.setText("Editar");
        btEditar.setEnabled(false);
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });
        painelBotoes.add(btEditar);

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/edit-delete-16x16.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.setEnabled(false);
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });
        painelBotoes.add(btExcluir);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/product-sales-report-32.png"))); // NOI18N
        jLabel1.setText("Pedidos de Venda");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/search-16x16.png"))); // NOI18N
        btPesquisar.setText("Pesquisar");
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        tbVendas.setModel(tableModel);
        jScrollPane1.setViewportView(tbVendas);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbDataFinal1.setText("Fim:");

        try {
            ftfDataFinalv.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfDataFinalv.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        try {
            ftfDataInicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfDataInicial.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        lbDataInical1.setText("Inicio:");

        jLabel2.setText("Entrega");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ftfDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbDataInical1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ftfDataFinalv, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbDataFinal1)))
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDataInical1)
                    .addComponent(lbDataFinal1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftfDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfDataFinalv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbEquipe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cbEquipeMouseReleased(evt);
            }
        });

        chbEquipe.setText("Equipe");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbEquipe, 0, 190, Short.MAX_VALUE)
                    .addComponent(chbEquipe))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chbEquipe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbEquipe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbCliente.setEditable(true);
        AutoCompletion.enable(cbCliente);
        cbCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cbClienteMouseReleased(evt);
            }
        });

        chbCliente.setText("Cliente");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbCliente)
                    .addComponent(cbCliente, 0, 190, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chbCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbStatus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cbStatusMouseReleased(evt);
            }
        });

        chbStatus.setText("Status");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbStatus)
                    .addComponent(cbStatus, 0, 190, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chbStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbCidade.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCidadeItemStateChanged(evt);
            }
        });

        jLabel3.setText("Cidade:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbCidade, 0, 190, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btLocPedido.setText("Localizar Pedido");
        btLocPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLocPedidoActionPerformed(evt);
            }
        });

        btCliente.setText("Localiar Cliente");
        btCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClienteActionPerformed(evt);
            }
        });

        lbCountResgistros.setText("Registros encontrados: 0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btPesquisar, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btLocPedido, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(btCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbCountResgistros)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btLocPedido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btCliente))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbCountResgistros)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelBotoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1249, 698));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        novoPedido();
    }//GEN-LAST:event_btNovoActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        editarPedido();
    }//GEN-LAST:event_btEditarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        excluirPedido();
    }//GEN-LAST:event_btExcluirActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //reiniciaTela();
    }//GEN-LAST:event_formWindowClosing

    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        atualizarDadosDaTabela();
    }//GEN-LAST:event_btPesquisarActionPerformed

    private void cbEquipeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbEquipeMouseReleased
        chbEquipe.setSelected(true);
    }//GEN-LAST:event_cbEquipeMouseReleased

    private void cbClienteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbClienteMouseReleased
        chbCliente.setSelected(true);
    }//GEN-LAST:event_cbClienteMouseReleased

    private void cbStatusMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbStatusMouseReleased
        chbStatus.setSelected(true);
    }//GEN-LAST:event_cbStatusMouseReleased

    private void btLocPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLocPedidoActionPerformed
        String pedido = "";
        while (pedido.equals("")) {
            pedido = Utilidades.getDigitos(JOptionPane.showInputDialog("Informe o número do pedido."));
            if (!pedido.equals("")) {
                procurarPedido(Integer.parseInt(pedido));
            } else {
                JOptionPane.showMessageDialog(this, "Você não informou o número do pedido.");
            }
        }
    }//GEN-LAST:event_btLocPedidoActionPerformed

    private void cbCidadeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCidadeItemStateChanged
        carregarCbcliente();
    }//GEN-LAST:event_cbCidadeItemStateChanged

    private void btClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClienteActionPerformed
        String idCliente = "";
        while (idCliente.equals("")) {
            idCliente = Utilidades.getDigitos(JOptionPane.showInputDialog("Informe o código do cliente."));
            if (!idCliente.equals("")) {
                procurarCliente(Integer.parseInt(idCliente));
            } else {
                JOptionPane.showMessageDialog(this, "Você não informou o código do cliente.");
            }
        }
    }//GEN-LAST:event_btClienteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCliente;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btLocPedido;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btPesquisar;
    private javax.swing.JComboBox cbCidade;
    private javax.swing.JComboBox cbCliente;
    private javax.swing.JComboBox cbEquipe;
    private javax.swing.JComboBox cbStatus;
    private javax.swing.JCheckBox chbCliente;
    private javax.swing.JCheckBox chbEquipe;
    private javax.swing.JCheckBox chbStatus;
    private javax.swing.JFormattedTextField ftfDataFinalv;
    private javax.swing.JFormattedTextField ftfDataInicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCountResgistros;
    private javax.swing.JLabel lbDataFinal1;
    private javax.swing.JLabel lbDataInical1;
    private javax.swing.JPanel painelBotoes;
    private javax.swing.JTable tbVendas;
    // End of variables declaration//GEN-END:variables
    private static List<PedidoBean> lista = new ArrayList<PedidoBean>();
    private static PedidoBean pedidoBean;
    private static PedidoBean pb = new PedidoBean();
    //-Código referente a tabela--------------------------------------------------------------------------------
    private DefaultTableModel tableModel = new DefaultTableModel(null, new String[]{"Pedido", "Equipe", "Vendedor", "Cod. Cliente", "Cliente", "Data Entrega", "Vencimento", "Status do pedido"});
    private ListSelectionModel lms;

    private void tbLinhaSelecionada(JTable tb) {
        if (tb.getSelectedRow() != -1) {
            pedidoBean = new PedidoBean();
            pedidoBean.setId(lista.get(tb.getSelectedRow()).getId());
            pedidoBean.setEquipe(lista.get(tb.getSelectedRow()).getEquipe());
            pedidoBean.setCliente(lista.get(tb.getSelectedRow()).getCliente());
            pedidoBean.setDataEntrega(lista.get(tb.getSelectedRow()).getDataEntrega());
            pedidoBean.setDataVencimento(lista.get(tb.getSelectedRow()).getDataVencimento());
            pedidoBean.setStatus(lista.get(tb.getSelectedRow()).getStatus());
            pedidoBean.setVendedor(lista.get(tb.getSelectedRow()).getVendedor());
            pedidoBean.setDesconto(lista.get(tb.getSelectedRow()).getDesconto());
            pedidoBean.setValorPedido(lista.get(tb.getSelectedRow()).getValorPedido());
            pedidoBean.setValorRecebido(lista.get(tb.getSelectedRow()).getValorRecebido());
            pedidoBean.setValorBrinde(lista.get(tb.getSelectedRow()).getValorBrinde());
            pedidoBean.setVlParcela01(lista.get(tb.getSelectedRow()).getVlParcela01Str());
            pedidoBean.setVlParcela02(lista.get(tb.getSelectedRow()).getVlParcela02Str());
            pedidoBean.setVlParcela03(lista.get(tb.getSelectedRow()).getVlParcela03Str());
            pedidoBean.setVlParcela04(lista.get(tb.getSelectedRow()).getVlParcela04Str());
            pedidoBean.setVlParcela05(lista.get(tb.getSelectedRow()).getVlParcela05Str());
            pedidoBean.setVlParcela06(lista.get(tb.getSelectedRow()).getVlParcela06Str());
            pedidoBean.setVlParcela07(lista.get(tb.getSelectedRow()).getVlParcela07Str());
            pedidoBean.setVlParcela08(lista.get(tb.getSelectedRow()).getVlParcela08Str());
            pedidoBean.setVlParcela09(lista.get(tb.getSelectedRow()).getVlParcela09Str());
            pedidoBean.setVlParcela10(lista.get(tb.getSelectedRow()).getVlParcela10Str());
            pedidoBean.setVlParcela11(lista.get(tb.getSelectedRow()).getVlParcela11Str());
            pedidoBean.setVlParcela12(lista.get(tb.getSelectedRow()).getVlParcela12Str());
            pedidoBean.setVlParcela13(lista.get(tb.getSelectedRow()).getVlParcela13Str());
            pedidoBean.setVlParcela14(lista.get(tb.getSelectedRow()).getVlParcela14Str());
            pedidoBean.setVlParcela15(lista.get(tb.getSelectedRow()).getVlParcela15Str());
            pedidoBean.setDtParcela01(lista.get(tb.getSelectedRow()).getDtParcela01Str());
            pedidoBean.setDtParcela02(lista.get(tb.getSelectedRow()).getDtParcela02Str());
            pedidoBean.setDtParcela03(lista.get(tb.getSelectedRow()).getDtParcela03Str());
            pedidoBean.setDtParcela04(lista.get(tb.getSelectedRow()).getDtParcela04Str());
            pedidoBean.setDtParcela05(lista.get(tb.getSelectedRow()).getDtParcela05Str());
            pedidoBean.setDtParcela06(lista.get(tb.getSelectedRow()).getDtParcela06Str());
            pedidoBean.setDtParcela07(lista.get(tb.getSelectedRow()).getDtParcela07Str());
            pedidoBean.setDtParcela08(lista.get(tb.getSelectedRow()).getDtParcela08Str());
            pedidoBean.setDtParcela09(lista.get(tb.getSelectedRow()).getDtParcela09Str());
            pedidoBean.setDtParcela10(lista.get(tb.getSelectedRow()).getDtParcela10Str());
            pedidoBean.setDtParcela11(lista.get(tb.getSelectedRow()).getDtParcela11Str());
            pedidoBean.setDtParcela12(lista.get(tb.getSelectedRow()).getDtParcela12Str());
            pedidoBean.setDtParcela13(lista.get(tb.getSelectedRow()).getDtParcela13Str());
            pedidoBean.setDtParcela14(lista.get(tb.getSelectedRow()).getDtParcela14Str());
            pedidoBean.setDtParcela15(lista.get(tb.getSelectedRow()).getDtParcela15Str());
            btEditar.setEnabled(true);
            btExcluir.setEnabled(true);
            btNovo.setEnabled(false);
        } else {
            pedidoBean = null;
            reiniciaBotoes();

        }
    }

    private void inicializarTabela() {

        tbVendas.getColumnModel().getColumn(0).setPreferredWidth(50);
        tbVendas.getColumnModel().getColumn(1).setPreferredWidth(200);
        tbVendas.getColumnModel().getColumn(2).setPreferredWidth(200);
        tbVendas.getColumnModel().getColumn(4).setPreferredWidth(200);
        tbVendas.setModel(tableModel);
        tbVendas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lms = tbVendas.getSelectionModel();
        lms.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    tbLinhaSelecionada(tbVendas);
                }
            }
        });
        //atualizarDadosDaTabela();
    }

    public void atualizarDadosDaTabela() {
        PedidoDAO dao = new PedidoDAO();

        if (chbCliente.isSelected()) {
            ClienteBean c = new ClienteBean();
            c.setNome(cbCliente.getSelectedItem().toString());
            pb.setCliente(c);
        } else {
            pb.setCliente(null);
        }

        if (chbEquipe.isSelected()) {
            EquipeBean e = new EquipeBean();
            e.setNome(cbEquipe.getSelectedItem().toString());
            pb.setEquipe(e);
        } else {
            pb.setEquipe(null);
        }

        if (chbStatus.isSelected()) {
            StatusVendaBean s = new StatusVendaBean();
            s.setStatus(cbStatus.getSelectedItem().toString());
            pb.setStatus(s);
        } else {
            pb.setStatus(null);
        }


        lista = dao.listarPedidos(pb, Utilidades.formataDataSQL(ftfDataInicial.getText()), Utilidades.formataDataSQL(ftfDataFinalv.getText()), chbEquipe.isSelected(), chbCliente.isSelected(), chbStatus.isSelected());


        if (tableModel.getRowCount() > 0) {
            limparTabela();
        }

        String[] campos = {null, null, null, null, null, null, null, null};


        for (int i = 0; i < lista.size(); i++) {
            tableModel.addRow(campos);
            tableModel.setValueAt(lista.get(i).getId(), i, 0);
            tableModel.setValueAt(lista.get(i).getEquipe().getNome(), i, 1);
            tableModel.setValueAt(lista.get(i).getVendedor().getNome(), i, 2);
            tableModel.setValueAt(lista.get(i).getCliente().getId(), i, 3);
            tableModel.setValueAt(lista.get(i).getCliente().getNome(), i, 4);
            tableModel.setValueAt(lista.get(i).getDataEntregaStr(), i, 5);
            tableModel.setValueAt(lista.get(i).getDataVencimentoStr(), i, 6);
            tableModel.setValueAt(lista.get(i).getStatus().getStatus(), i, 7);
        }
        lbCountResgistros.setText("Registros encontrados: " + lista.size());
    }

    public void procurarPedido(Integer codigo) {
        PedidoDAO dao = new PedidoDAO();

        lista = dao.localizarPedido(codigo);

        if (tableModel.getRowCount() > 0) {
            limparTabela();
        }

        String[] campos = {null, null, null, null, null, null, null, null};


        for (int i = 0; i < lista.size(); i++) {
            tableModel.addRow(campos);
            tableModel.setValueAt(lista.get(i).getId(), i, 0);
            tableModel.setValueAt(lista.get(i).getEquipe().getNome(), i, 1);
            tableModel.setValueAt(lista.get(i).getVendedor().getNome(), i, 2);
            tableModel.setValueAt(lista.get(i).getCliente().getId(), i, 3);
            tableModel.setValueAt(lista.get(i).getCliente().getNome(), i, 4);
            tableModel.setValueAt(lista.get(i).getDataEntregaStr(), i, 5);
            tableModel.setValueAt(lista.get(i).getDataVencimentoStr(), i, 6);
            tableModel.setValueAt(lista.get(i).getStatus().getStatus(), i, 7);
        }
        lbCountResgistros.setText("Registros encontrados: " + lista.size());
    }

    private void limparTabela() {
        while (tableModel.getRowCount() > 0) {
            tableModel.removeRow(0);
        }
    }
    //-Código referente a tabela--------------------------------------------------------------------------------

    private void novoPedido() {
        habilitaBotoesParaEdicao(true);
        FrmCadPedido frmCadPedido = new FrmCadPedido(null, true, null);
        frmCadPedido.setVisible(true);

    }

    private void editarPedido() {
        habilitaBotoesParaEdicao(true);
        FrmCadPedido frmCadPedido = new FrmCadPedido(null, true, pedidoBean);
        frmCadPedido.setVisible(true);
    }

    private void excluirPedido() {
        int opcao = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir este pedido de venda?", null, JOptionPane.OK_CANCEL_OPTION);
        if (opcao == 0) {
            PedidoDAO dao = new PedidoDAO();
            dao.excluir(pedidoBean);
            tableModel.removeRow(tbVendas.getSelectedRow());
            lbCountResgistros.setText("Registros encontrados: "+String.valueOf(tbVendas.getRowCount()));
        }
    }

    private void habilitaBotoesParaEdicao(boolean edicao) {

        if (edicao) {
            btNovo.setEnabled(false);
            btEditar.setEnabled(false);
            btExcluir.setEnabled(false);
        } else {
            btNovo.setEnabled(true);
            btEditar.setEnabled(true);
            btExcluir.setEnabled(true);
        }

    }

    public void reiniciaTela() {
        tbVendas.clearSelection();
        carregarCbEquipes();
        atualizarDadosDaTabela();
        reiniciaBotoes();
    }

    private void reiniciaBotoes() {
        btNovo.setEnabled(true);
        btEditar.setEnabled(false);
        btExcluir.setEnabled(false);
    }

    private void inicializarDatas() {
        Calendar dataInicial = Calendar.getInstance();
        dataInicial.setTime(new Date());
        SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");
        String novoFormato;
        novoFormato = formatador.format(dataInicial.getTime());
        ftfDataFinalv.setText(novoFormato);
        dataInicial.add(Calendar.DAY_OF_MONTH, -30);
        novoFormato = formatador.format(dataInicial.getTime());
        ftfDataInicial.setText(novoFormato);
    }

    private void carregarCbEquipes() {
        
        List<EquipeBean> equipes = new ArrayList<EquipeBean>();
        EquipeDAO edao = new EquipeDAO();
        equipes = edao.listar();

        cbEquipe.removeAllItems();
        for (int i = 0; i < equipes.size(); i++) {
            cbEquipe.addItem(equipes.get(i).getNome());
        }
    }
    
    private void carregarCbCidades() {     

        List<CidadeBean> cidades = new ArrayList<CidadeBean>();
        CidadeDAO cidDao = new CidadeDAO();
        cidades = cidDao.listar();

        cbCidade.removeAllItems();
        cbCidade.addItem("Todas");
        for (int i = 0; i < cidades.size(); i++) {
            cbCidade.addItem(cidades.get(i).getCidade());
        }
    }

    private void carregarCbcliente() {
        List<ClienteBean> clientes = new ArrayList<ClienteBean>();
        ClienteDAO cdao = new ClienteDAO();
        if (cbCidade.getSelectedIndex() == 0) {
            clientes = cdao.listar();
        } else {
            clientes = cdao.listarPorCidade(cbCidade.getSelectedItem().toString());
        }

        cbCliente.removeAllItems();
        for (int i = 0; i < clientes.size(); i++) {
            cbCliente.addItem(clientes.get(i).getNome());
        }
    }

    private void procurarCliente(int codigo) {
        PedidoDAO dao = new PedidoDAO();

        lista = dao.localizarCliente(codigo);

        if (tableModel.getRowCount() > 0) {
            limparTabela();
        }

        String[] campos = {null, null, null, null, null, null, null, null};


        for (int i = 0; i < lista.size(); i++) {
            tableModel.addRow(campos);
            tableModel.setValueAt(lista.get(i).getId(), i, 0);
            tableModel.setValueAt(lista.get(i).getEquipe().getNome(), i, 1);
            tableModel.setValueAt(lista.get(i).getVendedor().getNome(), i, 2);
            tableModel.setValueAt(lista.get(i).getCliente().getId(), i, 3);
            tableModel.setValueAt(lista.get(i).getCliente().getNome(), i, 4);
            tableModel.setValueAt(lista.get(i).getDataEntregaStr(), i, 5);
            tableModel.setValueAt(lista.get(i).getDataVencimentoStr(), i, 6);
            tableModel.setValueAt(lista.get(i).getStatus().getStatus(), i, 7);
        }
        lbCountResgistros.setText("Registros encontrados: " + lista.size());
    }
}
