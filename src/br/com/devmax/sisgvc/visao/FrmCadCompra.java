/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmCadPerfil.java
 *
 * Created on 06/07/2011, 10:36:34
 */
package br.com.devmax.sisgvc.visao;

import br.com.devmax.sisgvc.controle.Controle;
import br.com.devmax.sisgvc.daos.CompraDAO;
import br.com.devmax.sisgvc.daos.FornecedorDAO;
import br.com.devmax.sisgvc.daos.ItemCompraDAO;
import br.com.devmax.sisgvc.daos.ProdutoDAO;
import br.com.devmax.sisgvc.modelo.CompraBean;
import br.com.devmax.sisgvc.modelo.FornecedorBean;
import br.com.devmax.sisgvc.modelo.ItemCompraBean;
import br.com.devmax.sisgvc.modelo.ProdutoBean;
import br.com.devmax.sisgvc.modelo.Utilidades;
import java.awt.KeyboardFocusManager;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Maxwell
 */
public class FrmCadCompra extends javax.swing.JDialog {

    /** Creates new form FrmCadPerfil */
    public FrmCadCompra(java.awt.Frame parent, boolean modal, CompraBean compra) {
        super(parent, modal);
        initComponents(); 
        InicializarTela(compra);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnCabecalhoPedido = new javax.swing.JPanel();
        lbEquie = new javax.swing.JLabel();
        cbFornecedor = new javax.swing.JComboBox();
        lbEndereco = new javax.swing.JLabel();
        tfEndereco = new javax.swing.JTextField();
        lbCidade = new javax.swing.JLabel();
        tfCidade = new javax.swing.JTextField();
        lbUf = new javax.swing.JLabel();
        tfUf = new javax.swing.JTextField();
        lbDataEntrega = new javax.swing.JLabel();
        ftfDataEntrega = new javax.swing.JFormattedTextField();
        lbDataVencimento = new javax.swing.JLabel();
        ftfDataEmissao = new javax.swing.JFormattedTextField();
        btSalvarPedido = new javax.swing.JButton();
        lbNotaFiscal = new javax.swing.JLabel();
        ftfNotaFiscal = new javax.swing.JFormattedTextField();
        ftfCnpj = new javax.swing.JFormattedTextField();
        lbCnpj = new javax.swing.JLabel();
        pnItensVeda = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbItensVenda = new javax.swing.JTable();
        painelBotoesItensVenda = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        btIncluirItem = new javax.swing.JButton();
        btEditarItem = new javax.swing.JButton();
        btExcluirItem = new javax.swing.JButton();
        btSalvarItem = new javax.swing.JButton();
        lbCodigoI = new javax.swing.JLabel();
        ftfCodigoI = new javax.swing.JFormattedTextField();
        lbDiscriminacaoI = new javax.swing.JLabel();
        cbDiscriminacao = new javax.swing.JComboBox();
        lbQuantidade = new javax.swing.JLabel();
        ftfQuantidade = new javax.swing.JFormattedTextField();
        lbUnitario = new javax.swing.JLabel();
        ftfVlUnitario = new javax.swing.JFormattedTextField();
        lbvlTotal = new javax.swing.JLabel();
        ftfVlTotal = new javax.swing.JFormattedTextField();
        lbTotalConsignado = new javax.swing.JLabel();
        tfTotaQuantidadeCompra = new javax.swing.JTextField();
        lbVlTotalPedido = new javax.swing.JLabel();
        tfVlTotalNota = new javax.swing.JTextField();
        lbNumeroPedido = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SISGVC - Sistema Gerenciador de Vendas por Consignação");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnCabecalhoPedido.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbEquie.setText("Fornecedor:");

        cbFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFornecedorActionPerformed(evt);
            }
        });

        lbEndereco.setText("Endereço:");

        tfEndereco.setEnabled(false);

        lbCidade.setText("Cidade:");

        tfCidade.setEnabled(false);

        lbUf.setText("UF:");

        tfUf.setEnabled(false);

        lbDataEntrega.setText("Dt. Entrega:");

        ftfDataEntrega.setBackground(new java.awt.Color(255, 255, 204));
        try {
            ftfDataEntrega.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfDataEntrega.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        lbDataVencimento.setText("Dt. Emissão:");

        ftfDataEmissao.setBackground(new java.awt.Color(255, 255, 204));
        try {
            ftfDataEmissao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfDataEmissao.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        btSalvarPedido.setText("Salvar Pedido");
        btSalvarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarPedidoActionPerformed(evt);
            }
        });

        lbNotaFiscal.setText("Nota Fiscal:");

        ftfNotaFiscal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####################"))));

        ftfCnpj.setEditable(false);
        try {
            ftfCnpj.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfCnpj.setEnabled(false);

        lbCnpj.setText("CNPJ:");

        javax.swing.GroupLayout pnCabecalhoPedidoLayout = new javax.swing.GroupLayout(pnCabecalhoPedido);
        pnCabecalhoPedido.setLayout(pnCabecalhoPedidoLayout);
        pnCabecalhoPedidoLayout.setHorizontalGroup(
            pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCabecalhoPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCabecalhoPedidoLayout.createSequentialGroup()
                        .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNotaFiscal)
                            .addComponent(ftfNotaFiscal, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbEquie))
                        .addGap(18, 18, 18)
                        .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCnpj)
                            .addComponent(ftfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnCabecalhoPedidoLayout.createSequentialGroup()
                        .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnCabecalhoPedidoLayout.createSequentialGroup()
                                .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbEndereco))
                                .addGap(18, 18, 18)
                                .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfUf, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbUf)))
                            .addGroup(pnCabecalhoPedidoLayout.createSequentialGroup()
                                .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbDataVencimento)
                                    .addComponent(ftfDataEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ftfDataEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbDataEntrega))))
                        .addGap(18, 18, 18)
                        .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCidade)
                            .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btSalvarPedido)
                                .addComponent(tfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pnCabecalhoPedidoLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ftfDataEmissao, ftfDataEntrega});

        pnCabecalhoPedidoLayout.setVerticalGroup(
            pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCabecalhoPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbNotaFiscal)
                        .addComponent(lbEquie)
                        .addComponent(lbCnpj))
                    .addGroup(pnCabecalhoPedidoLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(ftfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ftfNotaFiscal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCabecalhoPedidoLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(lbEndereco))
                    .addGroup(pnCabecalhoPedidoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCidade)
                            .addComponent(lbUf))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfUf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCabecalhoPedidoLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(btSalvarPedido))
                    .addGroup(pnCabecalhoPedidoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnCabecalhoPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnCabecalhoPedidoLayout.createSequentialGroup()
                                .addComponent(lbDataVencimento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ftfDataEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnCabecalhoPedidoLayout.createSequentialGroup()
                                .addComponent(lbDataEntrega)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ftfDataEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        pnItensVeda.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbItensVenda.setModel(tableModelItensVenda);
        jScrollPane2.setViewportView(tbItensVenda);

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        btIncluirItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/03.png"))); // NOI18N
        btIncluirItem.setText("Incluir");
        btIncluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIncluirItemActionPerformed(evt);
            }
        });
        jToolBar2.add(btIncluirItem);

        btEditarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/7184_16x16.png"))); // NOI18N
        btEditarItem.setText("Editar");
        btEditarItem.setEnabled(false);
        btEditarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarItemActionPerformed(evt);
            }
        });
        jToolBar2.add(btEditarItem);

        btExcluirItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/04.png"))); // NOI18N
        btExcluirItem.setText("Remover");
        btExcluirItem.setEnabled(false);
        btExcluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirItemActionPerformed(evt);
            }
        });
        jToolBar2.add(btExcluirItem);

        btSalvarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/file-save-16x16.png"))); // NOI18N
        btSalvarItem.setText("Salvar");
        btSalvarItem.setEnabled(false);
        btSalvarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarItemActionPerformed(evt);
            }
        });
        jToolBar2.add(btSalvarItem);

        painelBotoesItensVenda.add(jToolBar2);

        lbCodigoI.setText("Código:");

        ftfCodigoI.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        ftfCodigoI.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ftfCodigoI.setEnabled(false);
        ftfCodigoI.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        ftfCodigoI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ftfCodigoIFocusLost(evt);
            }
        });

        lbDiscriminacaoI.setText("Discriminação:");

        cbDiscriminacao.setEnabled(false);
        cbDiscriminacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDiscriminacaoActionPerformed(evt);
            }
        });

        lbQuantidade.setText("Quantidade:");

        ftfQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        ftfQuantidade.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ftfQuantidade.setText("0");
        ftfQuantidade.setEnabled(false);
        ftfQuantidade.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        ftfQuantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ftfQuantidadeFocusLost(evt);
            }
        });

        lbUnitario.setText("Valor Unit.:");

        ftfVlUnitario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        ftfVlUnitario.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ftfVlUnitario.setText("0,00");
        ftfVlUnitario.setEnabled(false);
        ftfVlUnitario.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        ftfVlUnitario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ftfVlUnitarioFocusLost(evt);
            }
        });

        lbvlTotal.setText("Valor Total:");

        ftfVlTotal.setEditable(false);
        ftfVlTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        ftfVlTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ftfVlTotal.setText("0,00");
        ftfVlTotal.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        ftfVlTotal.setFocusable(false);

        javax.swing.GroupLayout pnItensVedaLayout = new javax.swing.GroupLayout(pnItensVeda);
        pnItensVeda.setLayout(pnItensVedaLayout);
        pnItensVedaLayout.setHorizontalGroup(
            pnItensVedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnItensVedaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnItensVedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
                    .addGroup(pnItensVedaLayout.createSequentialGroup()
                        .addGroup(pnItensVedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnItensVedaLayout.createSequentialGroup()
                                .addComponent(painelBotoesItensVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(325, 325, 325))
                            .addGroup(pnItensVedaLayout.createSequentialGroup()
                                .addGroup(pnItensVedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbCodigoI)
                                    .addComponent(ftfCodigoI, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnItensVedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbDiscriminacaoI)
                                    .addComponent(cbDiscriminacao, 0, 345, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(pnItensVedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbQuantidade)
                                    .addComponent(ftfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnItensVedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbUnitario)
                                    .addComponent(ftfVlUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(pnItensVedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbvlTotal)
                            .addComponent(ftfVlTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pnItensVedaLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ftfQuantidade, ftfVlTotal, ftfVlUnitario});

        pnItensVedaLayout.setVerticalGroup(
            pnItensVedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnItensVedaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnItensVedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnItensVedaLayout.createSequentialGroup()
                        .addComponent(painelBotoesItensVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnItensVedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnItensVedaLayout.createSequentialGroup()
                                .addGroup(pnItensVedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbDiscriminacaoI)
                                    .addComponent(lbCodigoI))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnItensVedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ftfCodigoI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbDiscriminacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ftfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lbQuantidade)
                            .addGroup(pnItensVedaLayout.createSequentialGroup()
                                .addComponent(lbUnitario)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ftfVlUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnItensVedaLayout.createSequentialGroup()
                        .addComponent(lbvlTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftfVlTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbTotalConsignado.setFont(new java.awt.Font("Tahoma", 1, 11));
        lbTotalConsignado.setText("Total de Itens Comprados:");

        tfTotaQuantidadeCompra.setEditable(false);
        tfTotaQuantidadeCompra.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfTotaQuantidadeCompra.setText("0");

        lbVlTotalPedido.setFont(new java.awt.Font("Tahoma", 1, 11));
        lbVlTotalPedido.setText("Valor total do Pedido:");

        tfVlTotalNota.setEditable(false);
        tfVlTotalNota.setFont(new java.awt.Font("Tahoma", 1, 12));
        tfVlTotalNota.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfVlTotalNota.setText("0,00");

        lbNumeroPedido.setFont(new java.awt.Font("Tahoma", 1, 12));
        lbNumeroPedido.setText("Compra de Produtos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbNumeroPedido)
                    .addComponent(pnCabecalhoPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbTotalConsignado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTotaQuantidadeCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(254, 254, 254)
                        .addComponent(lbVlTotalPedido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfVlTotalNota, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                    .addComponent(pnItensVeda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(lbNumeroPedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnCabecalhoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnItensVeda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTotalConsignado)
                    .addComponent(tfTotaQuantidadeCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbVlTotalPedido)
                    .addComponent(tfVlTotalNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-738)/2, (screenSize.height-644)/2, 738, 644);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        reiniciaAba();
        Controle.frmCompras.reiniciaTela();
    }//GEN-LAST:event_formWindowClosing

    private void btSalvarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarPedidoActionPerformed
        SalvarPedido();
    }//GEN-LAST:event_btSalvarPedidoActionPerformed

    private void ftfVlUnitarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ftfVlUnitarioFocusLost
        if (ftfVlUnitario.getText().isEmpty()) {
            ftfVlUnitario.setText("0,00");
        }
        calcularCompra();
}//GEN-LAST:event_ftfVlUnitarioFocusLost

    private void ftfQuantidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ftfQuantidadeFocusLost
        if (ftfQuantidade.getText().isEmpty()) {
            ftfQuantidade.setText("0");
        }
        calcularCompra();
}//GEN-LAST:event_ftfQuantidadeFocusLost

    private void cbDiscriminacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDiscriminacaoActionPerformed
        if (cbDiscriminacao.getSelectedIndex() != 0) {
            setaProduto();
        } else {
            limparDadosProduto();
        }
}//GEN-LAST:event_cbDiscriminacaoActionPerformed

    private void ftfCodigoIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ftfCodigoIFocusLost
        if (!ftfCodigoI.getText().equals("")) {
            buscarItemPorCodigo();
        }
}//GEN-LAST:event_ftfCodigoIFocusLost

    private void btSalvarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarItemActionPerformed
        salvarItemCompra();
}//GEN-LAST:event_btSalvarItemActionPerformed

    private void btExcluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirItemActionPerformed
        excluirItemCompra();
}//GEN-LAST:event_btExcluirItemActionPerformed

    private void btEditarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarItemActionPerformed
        editarItemCompra();
}//GEN-LAST:event_btEditarItemActionPerformed

    private void btIncluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIncluirItemActionPerformed
        if (!ftfNotaFiscal.getText().isEmpty()) {
            novoItemCompra();
        } else {
            JOptionPane.showMessageDialog(this, "Primeiro salve cabeçalho da nota fiscal.");
        }
}//GEN-LAST:event_btIncluirItemActionPerformed

    private void cbFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFornecedorActionPerformed
        System.out.println("fornecedor selecionado");
        if(cbFornecedor.getSelectedIndex()==0){
            limparDadosFornecedor();
        }else{
            setaFornecedor();
        }
    }//GEN-LAST:event_cbFornecedorActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEditarItem;
    private javax.swing.JButton btExcluirItem;
    private javax.swing.JButton btIncluirItem;
    private javax.swing.JButton btSalvarItem;
    private javax.swing.JButton btSalvarPedido;
    private javax.swing.JComboBox cbDiscriminacao;
    private javax.swing.JComboBox cbFornecedor;
    private javax.swing.JFormattedTextField ftfCnpj;
    private javax.swing.JFormattedTextField ftfCodigoI;
    private javax.swing.JFormattedTextField ftfDataEmissao;
    private javax.swing.JFormattedTextField ftfDataEntrega;
    private javax.swing.JFormattedTextField ftfNotaFiscal;
    private javax.swing.JFormattedTextField ftfQuantidade;
    private javax.swing.JFormattedTextField ftfVlTotal;
    private javax.swing.JFormattedTextField ftfVlUnitario;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JLabel lbCidade;
    private javax.swing.JLabel lbCnpj;
    private javax.swing.JLabel lbCodigoI;
    private javax.swing.JLabel lbDataEntrega;
    private javax.swing.JLabel lbDataVencimento;
    private javax.swing.JLabel lbDiscriminacaoI;
    private javax.swing.JLabel lbEndereco;
    private javax.swing.JLabel lbEquie;
    private javax.swing.JLabel lbNotaFiscal;
    private javax.swing.JLabel lbNumeroPedido;
    private javax.swing.JLabel lbQuantidade;
    private javax.swing.JLabel lbTotalConsignado;
    private javax.swing.JLabel lbUf;
    private javax.swing.JLabel lbUnitario;
    private javax.swing.JLabel lbVlTotalPedido;
    private javax.swing.JLabel lbvlTotal;
    private javax.swing.JPanel painelBotoesItensVenda;
    private javax.swing.JPanel pnCabecalhoPedido;
    private javax.swing.JPanel pnItensVeda;
    private javax.swing.JTable tbItensVenda;
    private javax.swing.JTextField tfCidade;
    private javax.swing.JTextField tfEndereco;
    private javax.swing.JTextField tfTotaQuantidadeCompra;
    private javax.swing.JTextField tfUf;
    private javax.swing.JTextField tfVlTotalNota;
    // End of variables declaration//GEN-END:variables
    //private static EquipeBean equipeBean = new EquipeBean();
    private static CompraBean compraBean = new CompraBean();
    private static ItemCompraBean itemCompraBean = new ItemCompraBean();
    private static List<ItemCompraBean> itensCompra = new ArrayList<ItemCompraBean>();
    private static List<FornecedorBean> fornecedores = new ArrayList<FornecedorBean>();
    private static List<ProdutoBean> produtos = new ArrayList<ProdutoBean>();
    private static CompraDAO vendaDAO = new CompraDAO();
    //-Código referente a tabela de Itens--------------------------------------------------------------------------------
    private DefaultTableModel tableModelItensVenda = new DefaultTableModel(null, new String[]{"Discriminação", "Quantidade", "Valor Unit.", "Total"});
    private ListSelectionModel lmsItensVenda;
    private int operacaoItensCompra = 0;//se 1: novo, se 2: editar

    private void tbItensVendaLinhaSelecionada(JTable tb) {
        if (tb.getSelectedRow() != -1) {
            itemCompraBean.setId(itensCompra.get(tb.getSelectedRow()).getId());
            cbDiscriminacao.setSelectedItem(itensCompra.get(tb.getSelectedRow()).getProduto().getProduto());
            ftfQuantidade.setText(itensCompra.get(tb.getSelectedRow()).getQuantidade().toString());
            ftfVlUnitario.setText(itensCompra.get(tb.getSelectedRow()).getValorUnitarioStr());
            ftfVlTotal.setText(itensCompra.get(tb.getSelectedRow()).getValorTotalStr());
            setaItemCompra();
            btEditarItem.setEnabled(true);
            btExcluirItem.setEnabled(true);
            operacaoItensCompra = 2;
        } else {
            limparCampos();
            editarCampos(false);
            reiniciaBotoes();
        }
    }

    private void InicializarTabelaDeItens() {

        tbItensVenda.getColumnModel().getColumn(0).setPreferredWidth(200);
        tbItensVenda.getColumnModel().getColumn(1).setPreferredWidth(50);
        tbItensVenda.getColumnModel().getColumn(2).setPreferredWidth(50);
        tbItensVenda.getColumnModel().getColumn(3).setPreferredWidth(50);
        tbItensVenda.setModel(tableModelItensVenda);
        tbItensVenda.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lmsItensVenda = tbItensVenda.getSelectionModel();
        lmsItensVenda.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    tbItensVendaLinhaSelecionada(tbItensVenda);
                }
            }
        });
        atualizarDadosDaTabelaItens();
    }

    private void atualizarDadosDaTabelaItens() {
        ItemCompraDAO dao = new ItemCompraDAO();
        itensCompra = dao.listar(compraBean);

        if (tableModelItensVenda.getRowCount() > 0) {
            limparTabelaDeItens();
        }

        String[] campos = {null, null, null, null};

        Integer quantidade = 0;
        BigDecimal valorNota = new BigDecimal(0);


        for (int i = 0; i < itensCompra.size(); i++) {
            tableModelItensVenda.addRow(campos);
            tableModelItensVenda.setValueAt(itensCompra.get(i).getProduto().getProduto(), i, 0);
            tableModelItensVenda.setValueAt(itensCompra.get(i).getQuantidade(), i, 1);
            tableModelItensVenda.setValueAt(itensCompra.get(i).getValorUnitarioStr(), i, 2);
            tableModelItensVenda.setValueAt(itensCompra.get(i).getValorTotalStr(), i, 3);

            quantidade = quantidade + itensCompra.get(i).getQuantidade();
            valorNota = valorNota.add(itensCompra.get(i).getValorTotal());
        }
        tfTotaQuantidadeCompra.setText(quantidade.toString());
        tfVlTotalNota.setText(Utilidades.formataMontetarioSTR(valorNota));
    }

    private void limparTabelaDeItens() {
        while (tableModelItensVenda.getRowCount() > 0) {
            tableModelItensVenda.removeRow(0);
        }
    }
    
    private void novoItemCompra() {
        habilitaBotoesParaEdicao(true);
        ftfCodigoI.requestFocus();
        operacaoItensCompra = 1;
    }

    private void editarItemCompra() {
        habilitaBotoesParaEdicao(true);
    }

    private void excluirItemCompra() {
        ItemCompraDAO dao = new ItemCompraDAO();
        dao.excluir(itemCompraBean);
        reiniciaAba();

    }

    private void salvarItemCompra() {
        setaItemCompra();
        ItemCompraDAO dao = new ItemCompraDAO();
        //verifica qual será a operação de peristência a ser realizada
        if (operacaoItensCompra == 1) {
            dao.inserir(itemCompraBean);
        }
        if (operacaoItensCompra == 2) {
            dao.alterar(itemCompraBean);
        }
        habilitaBotoesParaEdicao(false);
        reiniciaAba();
    }

    private void habilitaBotoesParaEdicao(boolean edicao) {

        if (edicao) {
            btIncluirItem.setEnabled(false);
            btEditarItem.setEnabled(false);
            btExcluirItem.setEnabled(false);
            btSalvarItem.setEnabled(true);
        } else {
            btIncluirItem.setEnabled(true);
            btEditarItem.setEnabled(true);
            btExcluirItem.setEnabled(true);
            btSalvarItem.setEnabled(false);
        }
        editarCampos(edicao);
    }

    private void limparCampos() {
        ftfCodigoI.setText("");
        cbDiscriminacao.setSelectedIndex(0);
        ftfQuantidade.setText("0");
        ftfVlUnitario.setText("0,00");
        ftfVlTotal.setText("0,00");
    }

    private void editarCampos(boolean b) {

        tbItensVenda.setEnabled(!b);
        ftfCodigoI.setEnabled(b);
        cbDiscriminacao.setEnabled(b);
        ftfQuantidade.setEnabled(b);
        ftfVlUnitario.setEnabled(b);
    }

    private void reiniciaBotoes() {
        btIncluirItem.setEnabled(true);
        btEditarItem.setEnabled(false);
        btExcluirItem.setEnabled(false);
        btSalvarItem.setEnabled(false);
    }

    public void reiniciaAba() {
        tbItensVenda.clearSelection();
        atualizarDadosDaTabelaItens();
        limparCampos();
        reiniciaBotoes();
        editarCampos(false);
        operacaoItensCompra = 0;
    }

    private void buscarItemPorCodigo() {
        Integer codigo = Integer.parseInt(ftfCodigoI.getText());
        boolean encontrado = false;
        for (int i = 0; i < produtos.size(); i++) {
            if (produtos.get(i).getId() == codigo) {
                cbDiscriminacao.setSelectedItem(produtos.get(i).getProduto());
                encontrado = true;
                break;
            }
        }

        if (!encontrado) {
            JOptionPane.showMessageDialog(this, "Produto não cadastrado.");
            ftfCodigoI.setText("");
            ftfCodigoI.requestFocus();
        }
    }

    private void limparDadosProduto() {
        ftfCodigoI.setText("");
        ftfVlUnitario.setText("0,00");
        ftfVlTotal.setText("0,00");
    }

    private void setaProduto() {
        for (int i = 0; i < produtos.size(); i++) {
            if (produtos.get(i).getProduto().equals(cbDiscriminacao.getSelectedItem().toString())) {
                itemCompraBean.setProduto(produtos.get(i));
                ftfCodigoI.setText(produtos.get(i).getId().toString());
                ftfVlUnitario.setText(produtos.get(i).getVlCompraStr());
                break;
            }
        }
    }

    private void setaItemCompra() {
        itemCompraBean.setQuantidade(Integer.parseInt(ftfQuantidade.getText()));
        itemCompraBean.setValorUnitario(ftfVlUnitario.getText());
        itemCompraBean.setCompra(compraBean);
    }

    private void calcularCompra() {
        setaItemCompra();
        ftfVlTotal.setText(itemCompraBean.getValorTotalStr());
    }

    private void carregarCbDiscriminacao() {
        cbDiscriminacao.removeAllItems();
        cbDiscriminacao.addItem("");
        ProdutoDAO dao = new ProdutoDAO();
        produtos = dao.listar();
        for (int i = 0; i < produtos.size(); i++) {
            cbDiscriminacao.addItem(produtos.get(i).getProduto());
        }
    }

   
    //Métodos dos componentes do cabeçalho do pedido-----------------------------------------------------------------
    private void InicializarComboBoxes() {
        carregarCbFornecedor();
        carregarCbDiscriminacao();
    }

    private void carregarCbFornecedor() {
        cbFornecedor.removeAllItems();
        cbFornecedor.addItem("");
        FornecedorDAO dao = new FornecedorDAO();
        fornecedores = dao.listar();
        for (int i = 0; i < fornecedores.size(); i++) {
            cbFornecedor.addItem(fornecedores.get(i).getNome());
        }
    }
   

    private void limparDadosFornecedor() {
        ftfCnpj.setText("");
        tfEndereco.setText("");
        tfCidade.setText("");
        tfUf.setText("");
    }

    private void setaFornecedor() {
        for (int i = 0; i < fornecedores.size(); i++) {
            if (fornecedores.get(i).getNome().equalsIgnoreCase(cbFornecedor.getSelectedItem().toString())) {
                ftfCnpj.setText(fornecedores.get(i).getCnpj());
                tfEndereco.setText(fornecedores.get(i).getEndereco());
                tfCidade.setText(fornecedores.get(i).getCidade());
                tfUf.setText(fornecedores.get(i).getUf());
                compraBean.setFornecedor(fornecedores.get(i));
                break;
            }
        }
    }

    private void InicializarTela(CompraBean compra) {
        //Faz com que toda vez que um formattedTextField receba focus selecione seu conteúdo
        KeyboardFocusManager.getCurrentKeyboardFocusManager().addPropertyChangeListener("permanentFocusOwner", new PropertyChangeListener() {

            public void propertyChange(final PropertyChangeEvent e) {
                if (e.getNewValue() instanceof JFormattedTextField) {
                    SwingUtilities.invokeLater(new Runnable() {

                        public void run() {
                            JFormattedTextField formattedTextField = (JFormattedTextField) e.getNewValue();
                            formattedTextField.selectAll();
                        }
                    });
                }
            }
        });

        InicializarComboBoxes();
        if (compra != null) {
            compraBean = compra;
            ftfNotaFiscal.setText(compraBean.getNtFiscal());
            cbFornecedor.setSelectedItem(compraBean.getFornecedor().getNome());
            ftfDataEntrega.setText(compraBean.getDataEntregaStr());
            ftfDataEmissao.setText(compraBean.getDataEmissaoStr());
        } 
        InicializarTabelaDeItens();
    }

    private void SalvarPedido() {
        if (validarDados()) {
            compraBean.setNtFiscal(ftfNotaFiscal.getText());
            compraBean.setDataEntrega(ftfDataEntrega.getText());
            compraBean.setDataEmissao(ftfDataEmissao.getText());

            if (compraBean.getId() == null) {
                compraBean.setId(vendaDAO.inserir(compraBean));
                JOptionPane.showMessageDialog(this, "Cabeçalho de compra salvo com sucesso!");
            } else {
                vendaDAO.alterar(compraBean);
                JOptionPane.showMessageDialog(this, "As alterações do cabeçalho compra foram salvas com sucesso!");
                Controle.frmCompras.reiniciaTela();
                limparDadosDoPedido();
                this.dispose();
            }
            
        }
    }   

    private void limparDadosDoPedido() {
        cbFornecedor.setSelectedIndex(0);
        ftfDataEntrega.setText("");
        ftfDataEmissao.setText("");
        compraBean.setId(null);
    }

    private boolean validarDados() {
        if (ftfDataEntrega.getText().equals("  /  /    ")) {
            JOptionPane.showMessageDialog(this, "Informe a data de Entrega", null, JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (ftfDataEmissao.getText().equals("  /  /    ")) {
            JOptionPane.showMessageDialog(this, "Informe a data de Emissão", null, JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if(cbFornecedor.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(this, "Informe o fornecedor", null, JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }
}
