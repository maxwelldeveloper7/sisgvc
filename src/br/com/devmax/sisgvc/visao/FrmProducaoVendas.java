/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmCadPerfil.java
 *
 * Created on 06/07/2011, 10:36:34
 */
package br.com.devmax.sisgvc.visao;

import br.com.devmax.sisgvc.daos.PedidoFuncionarioDAO;
import br.com.devmax.sisgvc.modelo.PedidoBean;
import br.com.devmax.sisgvc.modelo.Utilidades;
import br.com.devmax.sisgvc.modelo.PedidoPorVendedorBean;
import br.com.devmax.sisgvc.visao.modelos.ColunasNumericas;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Maxwell
 */
public class FrmProducaoVendas extends javax.swing.JDialog {

    /** Creates new form FrmCadPerfil */
    public FrmProducaoVendas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicializarDatas();
        inicializarTabela();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbVendas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        lbDataFinal1 = new javax.swing.JLabel();
        ftfDataFinal = new javax.swing.JFormattedTextField();
        ftfDataInicial = new javax.swing.JFormattedTextField();
        lbDataInical1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SISGVC - Sistema Gerenciador de Vendas por Consignação");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/paper_content_chart_32.png"))); // NOI18N
        jLabel1.setText("Produção de Vendas por Vendedor");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/devmax/sisgvc/visao/img/search-16x16.png"))); // NOI18N
        btPesquisar.setText("Pesquisar");
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        tbVendas.setModel(tableModel);
        jScrollPane1.setViewportView(tbVendas);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbDataFinal1.setText("Fim:");

        try {
            ftfDataFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfDataFinal.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        try {
            ftfDataInicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfDataInicial.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        lbDataInical1.setText("Inicio:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ftfDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDataInical1))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ftfDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDataFinal1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDataInical1)
                    .addComponent(lbDataFinal1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftfDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1290, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1003, Short.MAX_VALUE)
                        .addComponent(btPesquisar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btPesquisar)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1350)/2, (screenSize.height-659)/2, 1350, 659);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        reiniciaTela();
    }//GEN-LAST:event_formWindowClosing

    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        atualizarDadosDaTabela();
    }//GEN-LAST:event_btPesquisarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btPesquisar;
    private javax.swing.JFormattedTextField ftfDataFinal;
    private javax.swing.JFormattedTextField ftfDataInicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDataFinal1;
    private javax.swing.JLabel lbDataInical1;
    private javax.swing.JTable tbVendas;
    // End of variables declaration//GEN-END:variables
    private static List<PedidoPorVendedorBean> lista = new ArrayList<PedidoPorVendedorBean>();
    private static PedidoBean vendaBean;
    //-Código referente a tabela--------------------------------------------------------------------------------
    private DefaultTableModel tableModel = new DefaultTableModel(null, new String[]{"Código", "Vendedor", "Consignados","Valor(R$)", "Pendentes","Valor(R$)", "Concluídos","Valor(R$)","Devolvidos","Valor(R$)", "Perdidos","Valor(R$)", "Total Pedidos","Descontos", "Recebidos","Valor(R$)"});
    private ListSelectionModel lms;

    private void tbLinhaSelecionada(JTable tb) {
        if (tb.getSelectedRow() != -1) {
            vendaBean = new PedidoBean();
            vendaBean.setId(lista.get(tb.getSelectedRow()).getCodVendedor());
           // vendaBean.setEquipe(lista.get(tb.getSelectedRow()).getEquipe());
           // vendaBean.setCliente(lista.get(tb.getSelectedRow()).getCliente());
           // vendaBean.setDataEntrega(lista.get(tb.getSelectedRow()).getDataEntrega());
          //  vendaBean.setDataVencimento(lista.get(tb.getSelectedRow()).getDataVencimento());
           // vendaBean.setStatus(lista.get(tb.getSelectedRow()).getStatus());
           // vendaBean.setVendedor(lista.get(tb.getSelectedRow()).getVendedor());
          //  vendaBean.setDesconto(lista.get(tb.getSelectedRow()).getDesconto());
        } else {
            vendaBean = null;
        }
    }

    private void inicializarTabela() {

        ColunasNumericas cn = new ColunasNumericas();
        cn.setHorizontalAlignment(SwingConstants.RIGHT);
        //tamanho das colunas
        tbVendas.getColumnModel().getColumn(0).setPreferredWidth(20);
        tbVendas.getColumnModel().getColumn(1).setPreferredWidth(140);
        tbVendas.getColumnModel().getColumn(2).setPreferredWidth(30);
        tbVendas.getColumnModel().getColumn(3).setPreferredWidth(30);
        tbVendas.getColumnModel().getColumn(4).setPreferredWidth(30);
        tbVendas.getColumnModel().getColumn(5).setPreferredWidth(30);
        tbVendas.getColumnModel().getColumn(6).setPreferredWidth(30);
        tbVendas.getColumnModel().getColumn(7).setPreferredWidth(30);
        tbVendas.getColumnModel().getColumn(8).setPreferredWidth(30);
        tbVendas.getColumnModel().getColumn(9).setPreferredWidth(30);
        tbVendas.getColumnModel().getColumn(10).setPreferredWidth(30);
        tbVendas.getColumnModel().getColumn(11).setPreferredWidth(30);
        tbVendas.getColumnModel().getColumn(12).setPreferredWidth(40);
        tbVendas.getColumnModel().getColumn(13).setPreferredWidth(30);
        tbVendas.getColumnModel().getColumn(14).setPreferredWidth(30);
        tbVendas.getColumnModel().getColumn(15).setPreferredWidth(30);
        //alinhamento das células
        tbVendas.getColumnModel().getColumn(0).setCellRenderer(cn);
        tbVendas.getColumnModel().getColumn(2).setCellRenderer(cn);
        tbVendas.getColumnModel().getColumn(3).setCellRenderer(cn);
        tbVendas.getColumnModel().getColumn(4).setCellRenderer(cn);
        tbVendas.getColumnModel().getColumn(5).setCellRenderer(cn);
        tbVendas.getColumnModel().getColumn(6).setCellRenderer(cn);
        tbVendas.getColumnModel().getColumn(7).setCellRenderer(cn);
        tbVendas.getColumnModel().getColumn(8).setCellRenderer(cn);
        tbVendas.getColumnModel().getColumn(9).setCellRenderer(cn);
        tbVendas.getColumnModel().getColumn(10).setCellRenderer(cn);
        tbVendas.getColumnModel().getColumn(11).setCellRenderer(cn);
        tbVendas.getColumnModel().getColumn(12).setCellRenderer(cn);
        tbVendas.getColumnModel().getColumn(13).setCellRenderer(cn);
        tbVendas.getColumnModel().getColumn(14).setCellRenderer(cn);
        tbVendas.getColumnModel().getColumn(15).setCellRenderer(cn);
        tbVendas.setModel(tableModel);
        tbVendas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lms = tbVendas.getSelectionModel();
        lms.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    tbLinhaSelecionada(tbVendas);
                }
            }
        });
        atualizarDadosDaTabela();
    }

    public void atualizarDadosDaTabela() {
        PedidoFuncionarioDAO dao = new PedidoFuncionarioDAO();
        lista = dao.listarIntervaloDatas(Utilidades.formataDataSQL(ftfDataInicial.getText()), Utilidades.formataDataSQL(ftfDataFinal.getText()));

        if (tableModel.getRowCount() > 0) {
            limparTabela();
        }

        String[] campos = {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null};


        for (int i = 0; i < lista.size(); i++) {
            tableModel.addRow(campos);
            tableModel.setValueAt(lista.get(i).getCodVendedor(), i, 0);
            tableModel.setValueAt(lista.get(i).getVendedor(), i, 1);
            tableModel.setValueAt(lista.get(i).getConsignado(), i, 2);
            tableModel.setValueAt(lista.get(i).getVlConsignadoSTR(), i, 3);
            tableModel.setValueAt(lista.get(i).getPendente(), i, 4);
            tableModel.setValueAt(lista.get(i).getVlPendenteSTR(), i, 5);
            tableModel.setValueAt(lista.get(i).getConcluido(), i, 6);
            tableModel.setValueAt(lista.get(i).getVlConcluidoSTR(), i, 7);
            tableModel.setValueAt(lista.get(i).getDevolvido(), i, 8);
            tableModel.setValueAt(lista.get(i).getVlDevolvidoSTR(), i, 9);
            tableModel.setValueAt(lista.get(i).getPerdido(), i, 10);
            tableModel.setValueAt(lista.get(i).getVlPerdidoSTR(), i, 11);
            tableModel.setValueAt(lista.get(i).getTotal(), i, 12);
            tableModel.setValueAt(lista.get(i).getVlDescontoSRT(), i, 13);
            tableModel.setValueAt(lista.get(i).getVlRecebidoSTR(), i, 14);
            tableModel.setValueAt(lista.get(i).getVlTotalSTR(), i, 15);
        }
    }

    private void limparTabela() {
        while (tableModel.getRowCount() > 0) {
            tableModel.removeRow(0);
        }
    }
    //-Código referente a tabela--------------------------------------------------------------------------------

    public void reiniciaTela() {
        tbVendas.clearSelection();
        atualizarDadosDaTabela();
    }

    private void inicializarDatas() {
        Calendar dataInicial = Calendar.getInstance();
        dataInicial.setTime(new Date());
        SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");
        String novoFormato;
        novoFormato = formatador.format(dataInicial.getTime());
        ftfDataFinal.setText(novoFormato);
        dataInicial.add(Calendar.DAY_OF_MONTH, -7);
        novoFormato = formatador.format(dataInicial.getTime());
        ftfDataInicial.setText(novoFormato);
    }
}
